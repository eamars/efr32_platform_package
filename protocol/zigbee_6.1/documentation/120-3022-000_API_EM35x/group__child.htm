<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 6.1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div><!-- Generated by Doxygen 1.8.11 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('group__child.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Child</div>  </div>
</div><!--header-->
<div class="contents">
<table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="func-members"></a>
Functions</h2></td></tr>
<tr class="memitem:ga71565de3117cde1a2a13e12a1c1c85eb"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga71565de3117cde1a2a13e12a1c1c85eb">emberChildId</a> (uint8_t childIndex)</td></tr>
<tr class="separator:ga71565de3117cde1a2a13e12a1c1c85eb"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga0e84e3a03518f899707e508e2d997f2b"><td class="memItemLeft" align="right" valign="top">int8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga0e84e3a03518f899707e508e2d997f2b">emberChildPower</a> (uint8_t childIndex)</td></tr>
<tr class="separator:ga0e84e3a03518f899707e508e2d997f2b"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafbedf8e1426c5157b1ea4b472cbc128c"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gafbedf8e1426c5157b1ea4b472cbc128c">emberSetChildPower</a> (uint8_t childIndex, int8_t newPower)</td></tr>
<tr class="separator:gafbedf8e1426c5157b1ea4b472cbc128c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1f2588655e93893a5c3a8428cdd99a4c"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga1f2588655e93893a5c3a8428cdd99a4c">emberChildIndex</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> childId)</td></tr>
<tr class="separator:ga1f2588655e93893a5c3a8428cdd99a4c"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga1d3a1f6532f061e67d64ab974b7f2d28"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga1d3a1f6532f061e67d64ab974b7f2d28">emberGetChildData</a> (uint8_t index, <a class="el" href="structEmberChildData.htm">EmberChildData</a> *childData)</td></tr>
<tr class="separator:ga1d3a1f6532f061e67d64ab974b7f2d28"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab84639544f862c7604d2d58f69012d92"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gab84639544f862c7604d2d58f69012d92">emberChildJoinHandler</a> (uint8_t index, bool joining)</td></tr>
<tr class="separator:gab84639544f862c7604d2d58f69012d92"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2bd44c5fc834bc2a1864d95cc2e67bf"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gad2bd44c5fc834bc2a1864d95cc2e67bf">emberPollForData</a> (void)</td></tr>
<tr class="separator:gad2bd44c5fc834bc2a1864d95cc2e67bf"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3e680431f942bc2fd1103f1da8671282"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga3e680431f942bc2fd1103f1da8671282">emberPollCompleteHandler</a> (<a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status)</td></tr>
<tr class="separator:ga3e680431f942bc2fd1103f1da8671282"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gaf3226a88d7037f709628da5253bef3e8"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gaf3226a88d7037f709628da5253bef3e8">emberSetMessageFlag</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> childId)</td></tr>
<tr class="separator:gaf3226a88d7037f709628da5253bef3e8"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gadae697821da2753c665460998a580f88"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gadae697821da2753c665460998a580f88">emberClearMessageFlag</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> childId)</td></tr>
<tr class="separator:gadae697821da2753c665460998a580f88"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga72a0892deafbaf87394c27c070be7341"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga72a0892deafbaf87394c27c070be7341">emberPollHandler</a> (<a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> childId, bool transmitExpected)</td></tr>
<tr class="separator:ga72a0892deafbaf87394c27c070be7341"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga2ba12b4fa917cf2070825127288cf173"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga2ba12b4fa917cf2070825127288cf173">emberChildCount</a> (void)</td></tr>
<tr class="separator:ga2ba12b4fa917cf2070825127288cf173"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gacde89e6308660252044fe260bfba6df1"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gacde89e6308660252044fe260bfba6df1">emberRouterChildCount</a> (void)</td></tr>
<tr class="separator:gacde89e6308660252044fe260bfba6df1"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad803e758ccb98586f60d8c805bafdf51"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gad803e758ccb98586f60d8c805bafdf51">emberMaxChildCount</a> (void)</td></tr>
<tr class="separator:gad803e758ccb98586f60d8c805bafdf51"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gafc032261eda8f132e216a49e63c73ce4"><td class="memItemLeft" align="right" valign="top">uint8_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gafc032261eda8f132e216a49e63c73ce4">emberMaxRouterChildCount</a> (void)</td></tr>
<tr class="separator:gafc032261eda8f132e216a49e63c73ce4"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga143df05d07a550e301f42e286108db58"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga143df05d07a550e301f42e286108db58">emberGetParentNodeId</a> (void)</td></tr>
<tr class="separator:ga143df05d07a550e301f42e286108db58"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab31996d03cbd3b65836db1687e3d2a9c"><td class="memItemLeft" align="right" valign="top"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gab31996d03cbd3b65836db1687e3d2a9c">emberGetParentEui64</a> (void)</td></tr>
<tr class="separator:gab31996d03cbd3b65836db1687e3d2a9c"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table><table class="memberdecls">
<tr class="heading"><td colspan="2"><h2 class="groupheader"><a name="member-group"></a>
Power Management</h2></td></tr>
<tr class="memitem:gadf764cbdea00d65edcd07bb9953ad2b7"><td class="memItemLeft" align="right" valign="top">enum &#160;</td><td class="memItemRight" valign="bottom">{ <br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a0737e57e1d3364f12ea88b20f0ecad5e">EMBER_OUTGOING_MESSAGES</a> = 0x0001, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a30ddaa8152f255ac8d18ebb113556ed2">EMBER_INCOMING_MESSAGES</a> = 0x0002, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7ad11f504a8af19829d008f4f4708b24f3">EMBER_RADIO_IS_ON</a> = 0x0004, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a7053f843f3fdea3330f67736a83134b8">EMBER_TRANSPORT_ACTIVE</a> = 0x0008, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a9c3155446f933ff4c839e14517ea5fbc">EMBER_APS_LAYER_ACTIVE</a> = 0x0010, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a352d00336598b3cbf48509f27a3c893e">EMBER_ASSOCIATING</a> = 0x0020, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a8c963de812a11c3d9b5369ec1b905cf3">EMBER_ZLL_TOUCH_LINKING</a> = 0x0040, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a4e4e0f711ebc7d467453831e0b5c6fdd">EMBER_NETWORK_TIMEOUT_REQUEST</a> = 0x0200, 
<br />
&#160;&#160;<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7aa240885f72e6e0a631ef7523230e1218">EMBER_SEND_ORPHAN_NOTIFICATION</a> = 0x0400
<br />
 }</td></tr>
<tr class="separator:gadf764cbdea00d65edcd07bb9953ad2b7"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gada2efe397b0ebb1aaf932d739449a8e3"><td class="memItemLeft" align="right" valign="top">uint16_t&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gada2efe397b0ebb1aaf932d739449a8e3">emberCurrentStackTasks</a> (void)</td></tr>
<tr class="separator:gada2efe397b0ebb1aaf932d739449a8e3"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga7a2c2ebcc639fdd5bcde98aa11a98907"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga7a2c2ebcc639fdd5bcde98aa11a98907">emberOkToNap</a> (void)</td></tr>
<tr class="separator:ga7a2c2ebcc639fdd5bcde98aa11a98907"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga589e20fee6b28954010ac243153bb29e"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga589e20fee6b28954010ac243153bb29e">emberParentTokenSet</a> (void)</td></tr>
<tr class="separator:ga589e20fee6b28954010ac243153bb29e"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga3f3e0259fcebb4c2cf611d3e9d22db89"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga3f3e0259fcebb4c2cf611d3e9d22db89">emberOkToHibernate</a> (void)</td></tr>
<tr class="separator:ga3f3e0259fcebb4c2cf611d3e9d22db89"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga291a33ecf3f4c95d6bc1a1fe58c01f12"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga291a33ecf3f4c95d6bc1a1fe58c01f12">emberOkToGoToLowPowerMode</a> (void)</td></tr>
<tr class="separator:ga291a33ecf3f4c95d6bc1a1fe58c01f12"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gab64ac0ff428ecdb338960e517334d7ce"><td class="memItemLeft" align="right" valign="top">bool&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gab64ac0ff428ecdb338960e517334d7ce">emberOkToLongPoll</a> (void)</td></tr>
<tr class="separator:gab64ac0ff428ecdb338960e517334d7ce"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga69bcb9675634542087715b23bb171536"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga69bcb9675634542087715b23bb171536">emberStackPowerDown</a> (void)</td></tr>
<tr class="separator:ga69bcb9675634542087715b23bb171536"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:gad2a36231590e2bb0ada408e24ed0d3f9"><td class="memItemLeft" align="right" valign="top">void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#gad2a36231590e2bb0ada408e24ed0d3f9">emberStackPowerUp</a> (void)</td></tr>
<tr class="separator:gad2a36231590e2bb0ada408e24ed0d3f9"><td class="memSeparator" colspan="2">&#160;</td></tr>
<tr class="memitem:ga695b0d37d01ce47623309d4629059324"><td class="memItemLeft" align="right" valign="top">#define&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__child.htm#ga695b0d37d01ce47623309d4629059324">EMBER_HIGH_PRIORITY_TASKS</a>&#160;&#160;&#160;(<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a0737e57e1d3364f12ea88b20f0ecad5e">EMBER_OUTGOING_MESSAGES</a> | <a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a30ddaa8152f255ac8d18ebb113556ed2">EMBER_INCOMING_MESSAGES</a> | <a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7ad11f504a8af19829d008f4f4708b24f3">EMBER_RADIO_IS_ON</a>)</td></tr>
<tr class="separator:ga695b0d37d01ce47623309d4629059324"><td class="memSeparator" colspan="2">&#160;</td></tr>
</table>
<a name="details" id="details"></a><h2 class="groupheader">Detailed Description</h2>
<p>EmberZNet API relating to end device children. </p>
<p>See <a class="el" href="child_8h.htm">child.h</a> for source code. </p>
<h2 class="groupheader">Macro Definition Documentation</h2>
<a class="anchor" id="ga695b0d37d01ce47623309d4629059324"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define EMBER_HIGH_PRIORITY_TASKS&#160;&#160;&#160;(<a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a0737e57e1d3364f12ea88b20f0ecad5e">EMBER_OUTGOING_MESSAGES</a> | <a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7a30ddaa8152f255ac8d18ebb113556ed2">EMBER_INCOMING_MESSAGES</a> | <a class="el" href="group__child.htm#ggadf764cbdea00d65edcd07bb9953ad2b7ad11f504a8af19829d008f4f4708b24f3">EMBER_RADIO_IS_ON</a>)</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A mask of the tasks that prevent a device from sleeping. </p>

<p>Definition at line <a class="el" href="child_8h_source.htm#l00277">277</a> of file <a class="el" href="child_8h_source.htm">child.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Enumeration Type Documentation</h2>
<a class="anchor" id="gadf764cbdea00d65edcd07bb9953ad2b7"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">anonymous enum</td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Defines tasks that prevent the stack from sleeping. </p>
<table class="fieldtable">
<tr><th colspan="2">Enumerator</th></tr><tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a0737e57e1d3364f12ea88b20f0ecad5e"></a>EMBER_OUTGOING_MESSAGES&#160;</td><td class="fielddoc">
<p>There are messages waiting for transmission. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a30ddaa8152f255ac8d18ebb113556ed2"></a>EMBER_INCOMING_MESSAGES&#160;</td><td class="fielddoc">
<p>One or more incoming messages are being processed. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7ad11f504a8af19829d008f4f4708b24f3"></a>EMBER_RADIO_IS_ON&#160;</td><td class="fielddoc">
<p>The radio is currently powered on. On sleepy devices the radio is turned off when not in use. On non-sleepy devices (<a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1acae75df17542306f3b21ceb51444d49441">EMBER_COORDINATOR</a>, <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1acafdbd99d1a442d94384b437f1bf26aa46">EMBER_ROUTER</a>, or <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca72f42a3b742eb2c416b6f4d832169713">EMBER_END_DEVICE</a>) the radio is always on. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a7053f843f3fdea3330f67736a83134b8"></a>EMBER_TRANSPORT_ACTIVE&#160;</td><td class="fielddoc">
<p>The transport layer has messages awaiting an ACK. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a9c3155446f933ff4c839e14517ea5fbc"></a>EMBER_APS_LAYER_ACTIVE&#160;</td><td class="fielddoc">
<p>The ZigBee APS layer has messages awaiting an ACK. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a352d00336598b3cbf48509f27a3c893e"></a>EMBER_ASSOCIATING&#160;</td><td class="fielddoc">
<p>The node is currently trying to associate with a ZigBee PRO network. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a8c963de812a11c3d9b5369ec1b905cf3"></a>EMBER_ZLL_TOUCH_LINKING&#160;</td><td class="fielddoc">
<p>The node is currently touch linking. </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7a4e4e0f711ebc7d467453831e0b5c6fdd"></a>EMBER_NETWORK_TIMEOUT_REQUEST&#160;</td><td class="fielddoc">
<p>Network Timeout Request Event </p>
</td></tr>
<tr><td class="fieldname"><a class="anchor" id="ggadf764cbdea00d65edcd07bb9953ad2b7aa240885f72e6e0a631ef7523230e1218"></a>EMBER_SEND_ORPHAN_NOTIFICATION&#160;</td><td class="fielddoc">
<p>Sending Orphan Notification Event </p>
</td></tr>
</table>

<p>Definition at line <a class="el" href="child_8h_source.htm#l00251">251</a> of file <a class="el" href="child_8h_source.htm">child.h</a>.</p>

</div>
</div>
<h2 class="groupheader">Function Documentation</h2>
<a class="anchor" id="ga71565de3117cde1a2a13e12a1c1c85eb"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> emberChildId </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>childIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts a child index to a node ID. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childIndex</td><td>The index.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The node ID of the child or <a class="el" href="group__ember__types.htm#gaab5d18192499c30084dc11d1931bfeac" title="A distinguished network ID that will never be assigned to any node. Used to indicate the absence of a...">EMBER_NULL_NODE_ID</a> if there isn't a child at the childIndex specified. </dd></dl>

</div>
</div>
<a class="anchor" id="ga0e84e3a03518f899707e508e2d997f2b"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int8_t emberChildPower </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>childIndex</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function returns radio power value of the child from the given childIndex. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childIndex</td><td>The index.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The power of the child or max radio power which is the power value provided by user while forming/joining a network if there isn't a child at the childIndex specified. </dd></dl>

</div>
</div>
<a class="anchor" id="gafbedf8e1426c5157b1ea4b472cbc128c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberSetChildPower </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>childIndex</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int8_t&#160;</td>
          <td class="paramname"><em>newPower</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This function sets the radio power value for a given child index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childIndex</td><td>The index </td></tr>
    <tr><td class="paramname">newPower</td><td>The new power value </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga1f2588655e93893a5c3a8428cdd99a4c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberChildIndex </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>childId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Converts a node ID to a child index. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childId</td><td>The node ID of the child.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>The child index or 0xFF if the node ID does not belong to a child. </dd></dl>

</div>
</div>
<a class="anchor" id="ga1d3a1f6532f061e67d64ab974b7f2d28"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberGetChildData </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structEmberChildData.htm">EmberChildData</a> *&#160;</td>
          <td class="paramname"><em>childData</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>If there is a child at 'index' this copies its EUI64 and node type into the return variables and returns <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message. ">EMBER_SUCCESS</a>. If there is no child at 'index' it returns <a class="el" href="group__status__codes.htm#gaf57eb51e5e4bbe3c83d9eb89c412806a" title="The node has not joined a network. ">EMBER_NOT_JOINED</a>. Possible child indexes run from zero to <a class="el" href="group__child.htm#gad803e758ccb98586f60d8c805bafdf51" title="Returns the maximum number of children for this node. The return value is undefined for nodes that ar...">emberMaxChildCount()</a> - 1. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the child of interest.</td></tr>
    <tr><td class="paramname">childData</td><td>The child's data is copied into here.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>Returns <a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message. ">EMBER_SUCCESS</a> if a child is found at that index, <a class="el" href="group__status__codes.htm#gaf57eb51e5e4bbe3c83d9eb89c412806a" title="The node has not joined a network. ">EMBER_NOT_JOINED</a> if not. </dd></dl>

</div>
</div>
<a class="anchor" id="gab84639544f862c7604d2d58f69012d92"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberChildJoinHandler </td>
          <td>(</td>
          <td class="paramtype">uint8_t&#160;</td>
          <td class="paramname"><em>index</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>joining</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>This is called by the stack when a child joins or leaves. 'Joining' is true if the child is joining and false if leaving. </p>
<p>The index is the same as the value that should be passed to <a class="el" href="group__child.htm#ga1d3a1f6532f061e67d64ab974b7f2d28" title="If there is a child at &#39;index&#39; this copies its EUI64 and node type into the return variables and retu...">emberGetChildData()</a> to get this child's data. Note that if the child is leaving <a class="el" href="group__child.htm#ga1d3a1f6532f061e67d64ab974b7f2d28" title="If there is a child at &#39;index&#39; this copies its EUI64 and node type into the return variables and retu...">emberGetChildData()</a> will now return <a class="el" href="group__status__codes.htm#gaf57eb51e5e4bbe3c83d9eb89c412806a" title="The node has not joined a network. ">EMBER_NOT_JOINED</a> if called with this index. If the application includes <a class="el" href="group__child.htm#gab84639544f862c7604d2d58f69012d92" title="This is called by the stack when a child joins or leaves. &#39;Joining&#39; is true if the child is joining a...">emberChildJoinHandler()</a>, it must define EMBER_APPLICATION_HAS_CHILD_JOIN_HANDLER in its CONFIGURATION_HEADER</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">index</td><td>The index of the child of interest.</td></tr>
    <tr><td class="paramname">joining</td><td>True if the child is joining, false if the child is leaving. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gad2bd44c5fc834bc2a1864d95cc2e67bf"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberPollForData </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Function to request any pending data from the parent node. This function allows an end device to query its parent for any pending data. </p>
<p>End devices must call this function periodically to maintain contact with their parent. The parent will remove a mobile end device from its child table if it has not received a poll from it within the last <a class="el" href="group__configuration.htm#gab21de9707537734a041a4dbd8e7d20ce" title="The maximum amount of time (in quarter-seconds) that a mobile node can wait between polls...">EMBER_MOBILE_NODE_POLL_TIMEOUT</a> quarter seconds. It will remove a sleepy or non-sleepy end device if it has not received a poll from it within the last <a class="el" href="group__configuration.htm#ga6c860bd6bdf576016c24bfcbe1bed2bd" title="The maximum amount of time, in units determined by EMBER_END_DEVICE_POLL_TIMEOUT_SHIFT, that an EMBER_END_DEVICE or EMBER_SLEEPY_END_DEVICE can wait between polls. The timeout value in seconds is EMBER_END_DEVICE_POLL_TIMEOUT &lt;&lt; EMBER_END_DEVICE_POLL_TIMEOUT_SHIFT. If no poll is heard within this time, then the parent removes the end device from its tables. Note: there is a separate EMBER_MOBILE_NODE_POLL_TIMEOUT for mobile end devices. ">EMBER_END_DEVICE_POLL_TIMEOUT</a> &lt;&lt; <a class="el" href="group__configuration.htm#gad57fddf1386961d3a06a2b9fc2c311d1" title="The units used for timing out end devices on their parents. See EMBER_END_DEVICE_POLL_TIMEOUT for an ...">EMBER_END_DEVICE_POLL_TIMEOUT_SHIFT</a> seconds.</p>
<p>If the end device has lost contact with its parent, <a class="el" href="group__child.htm#gad2bd44c5fc834bc2a1864d95cc2e67bf" title="Function to request any pending data from the parent node. This function allows an end device to quer...">emberPollForData()</a> calls ::emberRejoinNetwork(true) and returns <a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message. ">EMBER_ERR_FATAL</a>.</p>
<p>The default values for the timeouts are set in <a class="el" href="ember-configuration-defaults_8h.htm" title="User-configurable stack memory allocation defaults. ">config/ember-configuration-defaults.h</a>, and can be overridden in the application's configuration header.</p>
<dl class="section return"><dt>Returns</dt><dd>An EmberStatus value:<ul>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message. ">EMBER_SUCCESS</a> - The poll message has been submitted for transmission.</li>
<li><a class="el" href="group__status__codes.htm#ga20f497445170399070473added9fb3e3" title="The API call is not allowed given the current state of the stack. ">EMBER_INVALID_CALL</a> - The node is not an end device.</li>
<li><a class="el" href="group__status__codes.htm#gaf57eb51e5e4bbe3c83d9eb89c412806a" title="The node has not joined a network. ">EMBER_NOT_JOINED</a> - The node is not part of a network.</li>
<li><a class="el" href="group__status__codes.htm#ga83ce926503db463f64d4011bdc8235d0" title="The MAC transmit queue is full. ">EMBER_MAC_TRANSMIT_QUEUE_FULL</a> - The MAC layer transmit queue is full.</li>
<li><a class="el" href="group__status__codes.htm#ga4d3c1feb618bb0c29c791d99386de625" title="There are no more buffers. ">EMBER_NO_BUFFERS</a> - There were no buffers available to create the data poll message.</li>
<li><a class="el" href="group__status__codes.htm#ga84817b6311c9b401707f01c16920eebc" title="The generic &quot;fatal error&quot; message. ">EMBER_ERR_FATAL</a> - Too much time has elapsed since the last successful poll. A rejoin attempt has been initiated. This error is not "fatal". The command can be retried until successful. </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga3e680431f942bc2fd1103f1da8671282"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPollCompleteHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a>&#160;</td>
          <td class="paramname"><em>status</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">
<p>@ brief This is called by the stack when a data poll to the parent is complete.</p>
<p>If the application includes <a class="el" href="group__child.htm#ga3e680431f942bc2fd1103f1da8671282">emberPollCompleteHandler()</a>, it must define EMBER_APPLICATION_HAS_POLL_COMPLETE_HANDLER within its CONFIGURATION_HEADER</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">status</td><td>An <code>EmberStatus</code> value:<ul>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message. ">EMBER_SUCCESS</a> - Data was received in response to the poll.</li>
<li><a class="el" href="group__status__codes.htm#ga3542a964d7edd64fdfc88b2c350c8f03" title="No pending data exists for device doing a data poll. ">EMBER_MAC_NO_DATA</a> - No data was pending.</li>
<li><a class="el" href="group__status__codes.htm#ga3149c5a575bba8685e7cf7ea15d5c89a" title="The APS layer attempted to send or deliver a message, but it failed. ">EMBER_DELIVERY_FAILED</a> - The poll message could not be sent.</li>
<li><a class="el" href="group__status__codes.htm#gabdc728e23b7d674216a6ebc10bb47f83" title="We expected to receive an ACK following the transmission, but the MAC level ACK was never received...">EMBER_MAC_NO_ACK_RECEIVED</a> - The poll message was sent but not acknowledged by the parent. </li>
</ul>
</td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="gaf3226a88d7037f709628da5253bef3e8"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberSetMessageFlag </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>childId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Sets a flag to indicate that there is a message pending for a child. The next time that the child polls, it will be informed that it has a pending message. The message is sent from emberPollHandler, which is called when the child requests the data. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childId</td><td>The ID of the child that just polled for data.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value.<ul>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message. ">EMBER_SUCCESS</a> - The next time that the child polls, it will be informed that it has pending data.</li>
<li><a class="el" href="group__status__codes.htm#gaf57eb51e5e4bbe3c83d9eb89c412806a" title="The node has not joined a network. ">EMBER_NOT_JOINED</a> - The child identified by childId is not our child (it is not in the PAN). </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="gadae697821da2753c665460998a580f88"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> emberClearMessageFlag </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>childId</em></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Clears a flag to indicate that there are no more messages for a child. The next time the child polls, it will be informed that it does not have any pending messages. </p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childId</td><td>The ID of the child that no longer has pending messages.</td></tr>
  </table>
  </dd>
</dl>
<dl class="section return"><dt>Returns</dt><dd>An <a class="el" href="error_8h.htm#acff561a945530f3039d6715958418ab8">EmberStatus</a> value.<ul>
<li><a class="el" href="group__status__codes.htm#ga2caa3c0d2aceeba0c2f29eb63d42ce29" title="The generic &quot;no error&quot; message. ">EMBER_SUCCESS</a> - The next time that the child polls, it will be informed that it does not have any pending messages.</li>
<li><a class="el" href="group__status__codes.htm#gaf57eb51e5e4bbe3c83d9eb89c412806a" title="The node has not joined a network. ">EMBER_NOT_JOINED</a> - The child identified by childId is not our child (it is not in the PAN). </li>
</ul>
</dd></dl>

</div>
</div>
<a class="anchor" id="ga72a0892deafbaf87394c27c070be7341"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberPollHandler </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a>&#160;</td>
          <td class="paramname"><em>childId</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">bool&#160;</td>
          <td class="paramname"><em>transmitExpected</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A callback that allows the application to send a message in response to a poll from a child. </p>
<p>This function is called when a child polls, provided that the pending message flag is set for that child (see <a class="el" href="group__child.htm#gaf3226a88d7037f709628da5253bef3e8" title="Sets a flag to indicate that there is a message pending for a child. The next time that the child pol...">emberSetMessageFlag()</a>. The message should be sent to the child using <a class="el" href="group__message.htm#ga436916a25553e6e3ca6267161ed9955c" title="Sends a unicast message as per the ZigBee specification. ">emberSendUnicast()</a> with the <a class="el" href="group__ember__types.htm#ggad2a739a76b34fd352df6ef65ffaeaefea881bc5215c32805450fe8107ba8bf713">EMBER_APS_OPTION_POLL_RESPONSE</a> option.</p>
<p>If the application includes ::emberPollHanlder(), it must define EMBER_APPLICATION_HAS_POLL_HANDLER in its CONFIGURATION_HEADER.</p>
<dl class="params"><dt>Parameters</dt><dd>
  <table class="params">
    <tr><td class="paramname">childId</td><td>The ID of the child that is requesting data.</td></tr>
    <tr><td class="paramname">transmitExpected</td><td>true if the child is expecting an application- supplied data message. false otherwise. </td></tr>
  </table>
  </dd>
</dl>

</div>
</div>
<a class="anchor" id="ga2ba12b4fa917cf2070825127288cf173"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberChildCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of children the node currently has. </p>
<dl class="section return"><dt>Returns</dt><dd>number of children </dd></dl>

</div>
</div>
<a class="anchor" id="gacde89e6308660252044fe260bfba6df1"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberRouterChildCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the number of router children that the node currently has. </p>
<dl class="section return"><dt>Returns</dt><dd>number of router children </dd></dl>

</div>
</div>
<a class="anchor" id="gad803e758ccb98586f60d8c805bafdf51"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberMaxChildCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the maximum number of children for this node. The return value is undefined for nodes that are not joined to a network. </p>
<dl class="section return"><dt>Returns</dt><dd>maximum number of children </dd></dl>

</div>
</div>
<a class="anchor" id="gafc032261eda8f132e216a49e63c73ce4"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint8_t emberMaxRouterChildCount </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the maximum number of router children for this node. The return value is undefined for nodes that are not joined to a network. </p>
<dl class="section return"><dt>Returns</dt><dd>maximum number of router children </dd></dl>

</div>
</div>
<a class="anchor" id="ga143df05d07a550e301f42e286108db58"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> emberGetParentNodeId </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the parent's node ID. The return value is undefined for nodes without parents (coordinators and nodes that are not joined to a network). </p>
<dl class="section return"><dt>Returns</dt><dd>parent's node ID </dd></dl>

</div>
</div>
<a class="anchor" id="gab31996d03cbd3b65836db1687e3d2a9c"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__ember__types.htm#ga21de0cf5f8f6730bc3be6c7ec2b82050">EmberEUI64</a> emberGetParentEui64 </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns the parent's EUI64. The return value is undefined for nodes without parents (coordinators and nodes that are not joined to a network). </p>
<dl class="section return"><dt>Returns</dt><dd>parent's EUI64 </dd></dl>

</div>
</div>
<a class="anchor" id="gada2efe397b0ebb1aaf932d739449a8e3"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">uint16_t emberCurrentStackTasks </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Returns a bitmask indicating the stack's current tasks. </p>
<p>The mask <a class="el" href="group__child.htm#ga695b0d37d01ce47623309d4629059324" title="A mask of the tasks that prevent a device from sleeping. ">EMBER_HIGH_PRIORITY_TASKS</a> defines which tasks are high priority. Devices should not sleep if any high priority tasks are active. Active tasks that are not high priority are waiting for messages to arrive from other devices. If there are active tasks, but no high priority ones, the device may sleep but should periodically wake up and call <a class="el" href="group__child.htm#gad2bd44c5fc834bc2a1864d95cc2e67bf" title="Function to request any pending data from the parent node. This function allows an end device to quer...">emberPollForData()</a> in order to receive messages. Parents will hold messages for <a class="el" href="group__configuration.htm#gade661ac2bfb536d5fef03b195f927d35" title="The maximum amount of time (in milliseconds) that the MAC will hold a message for indirect transmissi...">EMBER_INDIRECT_TRANSMISSION_TIMEOUT</a> milliseconds before discarding them.</p>
<dl class="section return"><dt>Returns</dt><dd>A bitmask of the stack's active tasks. </dd></dl>

</div>
</div>
<a class="anchor" id="ga7a2c2ebcc639fdd5bcde98aa11a98907"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberOkToNap </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack is currently in a state where there are no high priority tasks and may sleep. </p>
<p>There may be tasks expecting incoming messages, in which case the device should periodically wake up and call <a class="el" href="group__child.htm#gad2bd44c5fc834bc2a1864d95cc2e67bf" title="Function to request any pending data from the parent node. This function allows an end device to quer...">emberPollForData()</a> in order to receive messages. This function can only be called when the node type is <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca90e6ac7d448453a733071bc017e761de">EMBER_SLEEPY_END_DEVICE</a> or <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca0e94fb0bb8f75d40067a27cc0971119c">EMBER_MOBILE_END_DEVICE</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>true if the application may sleep but the stack may be expecting incoming messages. </dd></dl>

</div>
</div>
<a class="anchor" id="ga589e20fee6b28954010ac243153bb29e"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberParentTokenSet </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A mask of the tasks that prevent a device from sleeping. </p>

</div>
</div>
<a class="anchor" id="ga3f3e0259fcebb4c2cf611d3e9d22db89"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberOkToHibernate </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack currently has any tasks pending. </p>
<p>If there are no pending tasks then <a class="el" href="group__network__formation.htm#gaaf3d7cad7b0f03d28eea981561db64d8" title="A periodic tick routine that should be called: ">emberTick()</a> does not need to be called until the next time a stack API function is called. This function can only be called when the node type is <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca90e6ac7d448453a733071bc017e761de">EMBER_SLEEPY_END_DEVICE</a> or <a class="el" href="group__ember__types.htm#gga32518ff17fd5b898204c3e131077a1aca0e94fb0bb8f75d40067a27cc0971119c">EMBER_MOBILE_END_DEVICE</a>.</p>
<dl class="section return"><dt>Returns</dt><dd>true if the application may sleep for as long as it wishes. </dd></dl>

</div>
</div>
<a class="anchor" id="ga291a33ecf3f4c95d6bc1a1fe58c01f12"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberOkToGoToLowPowerMode </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>A mask of the tasks that prevent a device from sleeping. </p>

</div>
</div>
<a class="anchor" id="gab64ac0ff428ecdb338960e517334d7ce"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">bool emberOkToLongPoll </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Indicates whether the stack is currently in a state that does not require the application to periodically poll. </p>
<dl class="section return"><dt>Returns</dt><dd>true if the application may stop polling periodically. </dd></dl>

</div>
</div>
<a class="anchor" id="ga69bcb9675634542087715b23bb171536"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackPowerDown </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Immediately turns the radio power completely off. </p>
<p>After calling this function, you must not call any other stack function except <a class="el" href="group__child.htm#gad2a36231590e2bb0ada408e24ed0d3f9" title="Initializes the radio. Typically called coming out of deep sleep. ">emberStackPowerUp()</a>. This is because all other stack functions require that the radio is powered on for their proper operation. </p>

<p>Referenced by <a class="el" href="em__usbd_8c_source.htm#l00692">usbSuspendDsr()</a>.</p>

</div>
</div>
<a class="anchor" id="gad2a36231590e2bb0ada408e24ed0d3f9"></a>
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void emberStackPowerUp </td>
          <td>(</td>
          <td class="paramtype">void&#160;</td>
          <td class="paramname"></td><td>)</td>
          <td></td>
        </tr>
      </table>
</div><div class="memdoc">

<p>Initializes the radio. Typically called coming out of deep sleep. </p>
<p>For non-sleepy devices, also turns the radio on and leaves it in rx mode. </p>

</div>
</div>
</div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the EM35x SoC Platform. EmberZNet 6.1.0.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
