<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 6.1.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div><!-- Generated by Doxygen 1.8.11 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('em__usb_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">em_usb.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="em__usb_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00013"></a><span class="lineno">   13</span>&#160;<span class="preprocessor">#ifndef __EM_USB_H</span></div><div class="line"><a name="l00014"></a><span class="lineno">   14</span>&#160;<span class="preprocessor">#define __EM_USB_H</span></div><div class="line"><a name="l00015"></a><span class="lineno">   15</span>&#160;</div><div class="line"><a name="l00016"></a><span class="lineno">   16</span>&#160;<span class="preprocessor">#include &lt;string.h&gt;</span></div><div class="line"><a name="l00017"></a><span class="lineno">   17</span>&#160;<span class="preprocessor">#include &lt;stddef.h&gt;</span></div><div class="line"><a name="l00018"></a><span class="lineno">   18</span>&#160;</div><div class="line"><a name="l00020"></a><span class="lineno">   20</span>&#160;<span class="preprocessor">#if !defined(CORTEXM3_EM35X_USB)                 \</span></div><div class="line"><a name="l00021"></a><span class="lineno">   21</span>&#160;<span class="preprocessor">  || (EMBER_SERIAL3_MODE == EMBER_SERIAL_UNUSED) \</span></div><div class="line"><a name="l00022"></a><span class="lineno">   22</span>&#160;<span class="preprocessor">  || defined (USB_MSD)                           \</span></div><div class="line"><a name="l00023"></a><span class="lineno">   23</span>&#160;<span class="preprocessor">  || defined (USB_HID)</span></div><div class="line"><a name="l00024"></a><span class="lineno">   24</span>&#160;<span class="preprocessor">  #define EM_SERIAL3_ENABLED 0</span></div><div class="line"><a name="l00025"></a><span class="lineno">   25</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00026"></a><span class="lineno">   26</span>&#160;<span class="preprocessor">  #define EM_SERIAL3_ENABLED 1</span></div><div class="line"><a name="l00027"></a><span class="lineno">   27</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00028"></a><span class="lineno">   28</span>&#160;</div><div class="line"><a name="l00029"></a><span class="lineno">   29</span>&#160;<span class="preprocessor">#if EM_SERIAL3_ENABLED</span></div><div class="line"><a name="l00030"></a><span class="lineno">   30</span>&#160;<span class="preprocessor">  #include &quot;hal/micro/cortexm3/usb/cdc/usbconfig.h&quot;</span></div><div class="line"><a name="l00031"></a><span class="lineno">   31</span>&#160;<span class="preprocessor">#elif defined(USB_MSD)</span></div><div class="line"><a name="l00032"></a><span class="lineno">   32</span>&#160;<span class="preprocessor">  #include &quot;hal/micro/cortexm3/usb/msd/usbconfig.h&quot;</span></div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<span class="preprocessor">#elif defined(USB_HID)</span></div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;<span class="preprocessor">  #include &quot;hal/micro/cortexm3/usb/hid/usbconfig.h&quot;</span></div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00036"></a><span class="lineno">   36</span>&#160;<span class="preprocessor">  #include &quot;hal/micro/cortexm3/usb/usbconfig.h&quot;</span></div><div class="line"><a name="l00037"></a><span class="lineno">   37</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00038"></a><span class="lineno">   38</span>&#160;</div><div class="line"><a name="l00039"></a><span class="lineno">   39</span>&#160;<span class="preprocessor">#if defined(USB_USE_PRINTF)</span></div><div class="line"><a name="l00040"></a><span class="lineno">   40</span>&#160;<span class="preprocessor">#include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00041"></a><span class="lineno">   41</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00042"></a><span class="lineno">   42</span>&#160;</div><div class="line"><a name="l00043"></a><span class="lineno">   43</span>&#160;<span class="preprocessor">#if USB_SELFPWRD_STATE == 0</span></div><div class="line"><a name="l00044"></a><span class="lineno">   44</span>&#160;<span class="preprocessor">  #define USB_SUSPEND</span></div><div class="line"><a name="l00045"></a><span class="lineno">   45</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00046"></a><span class="lineno">   46</span>&#160;</div><div class="line"><a name="l00047"></a><span class="lineno">   47</span>&#160;<span class="preprocessor">#ifdef __CC_ARM</span></div><div class="line"><a name="l00048"></a><span class="lineno">   48</span>&#160;<span class="preprocessor">#pragma anon_unions</span></div><div class="line"><a name="l00049"></a><span class="lineno">   49</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00050"></a><span class="lineno">   50</span>&#160;</div><div class="line"><a name="l00051"></a><span class="lineno">   51</span>&#160;<span class="preprocessor">#include &lt;stdint.h&gt;</span></div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<span class="preprocessor">#include &lt;stdbool.h&gt;</span></div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> char16_t;</div><div class="line"><a name="l00054"></a><span class="lineno">   54</span>&#160;<span class="comment">// #define false 0;</span></div><div class="line"><a name="l00055"></a><span class="lineno">   55</span>&#160;<span class="comment">// #define true 1;</span></div><div class="line"><a name="l00056"></a><span class="lineno">   56</span>&#160;</div><div class="line"><a name="l00057"></a><span class="lineno">   57</span>&#160;<span class="comment">/* Debug buffer */</span></div><div class="line"><a name="l00058"></a><span class="lineno">   58</span>&#160;<span class="preprocessor">#if defined (USB_DEBUG)</span></div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="preprocessor">  #include &quot;serial/serial.h&quot;</span></div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;<span class="preprocessor">  #include &lt;stdio.h&gt;</span></div><div class="line"><a name="l00061"></a><span class="lineno">   61</span>&#160;<span class="keyword">extern</span> <span class="keywordtype">char</span> *DEBUG_BUFFER;</div><div class="line"><a name="l00062"></a><span class="lineno">   62</span>&#160;<span class="keywordtype">void</span> USBD_PrintDebug(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00063"></a><span class="lineno">   63</span>&#160;</div><div class="line"><a name="l00064"></a><span class="lineno">   64</span>&#160;<span class="preprocessor">  #define USB_PRINTDEBUG(a, b, c) DEBUG_BUFFER += sprintf(a, b, c)</span></div><div class="line"><a name="l00065"></a><span class="lineno">   65</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;</div><div class="line"><a name="l00079"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaa521decf385f2aa0ada4c2f22f9a5d95">   79</a></span>&#160;<span class="comment">/* SETUP request, direction of data stage */</span></div><div class="line"><a name="l00080"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gadbfebb23903d05393b65f468838f78c0">   80</a></span>&#160;<span class="preprocessor">#define USB_SETUP_DIR_OUT       0               </span></div><div class="line"><a name="l00081"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaacee2775597edddc9d4ba5dee2024395">   81</a></span>&#160;<span class="preprocessor">#define USB_SETUP_DIR_IN        1               </span></div><div class="line"><a name="l00082"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga204e51e67cf7671617112b94ecfe3a46">   82</a></span>&#160;<span class="preprocessor">#define USB_SETUP_DIR_MASK      0x80            </span></div><div class="line"><a name="l00083"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga88f4223ae1ca659baa20ddfdb3dcc217">   83</a></span>&#160;<span class="preprocessor">#define USB_SETUP_DIR_D2H       0x80            </span></div><div class="line"><a name="l00084"></a><span class="lineno">   84</span>&#160;<span class="preprocessor">#define USB_SETUP_DIR_H2D       0x00            </span></div><div class="line"><a name="l00086"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3b51a35acaa76cafbb987c07186a7868">   86</a></span>&#160;<span class="preprocessor"></span><span class="comment">/* SETUP request type */</span><span class="preprocessor"></span></div><div class="line"><a name="l00087"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gacf3fd30992e9fe01f1bac9aaa7fea61b">   87</a></span>&#160;<span class="preprocessor">#define USB_SETUP_TYPE_STANDARD       0         </span></div><div class="line"><a name="l00088"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga876bdd74d8bfb072121b9643556271ba">   88</a></span>&#160;<span class="preprocessor">#define USB_SETUP_TYPE_CLASS          1         </span></div><div class="line"><a name="l00089"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga10487f57d22e32059947a62ba2fc5228">   89</a></span>&#160;<span class="preprocessor">#define USB_SETUP_TYPE_VENDOR         2         </span></div><div class="line"><a name="l00090"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga8067a7210027455955067dc98e111494">   90</a></span>&#160;<span class="preprocessor">#define USB_SETUP_TYPE_STANDARD_MASK  0x00      </span></div><div class="line"><a name="l00091"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga7e1d5f94bc4780ea74aea4efa5cbd804">   91</a></span>&#160;<span class="preprocessor">#define USB_SETUP_TYPE_CLASS_MASK     0x20      </span></div><div class="line"><a name="l00092"></a><span class="lineno">   92</span>&#160;<span class="preprocessor">#define USB_SETUP_TYPE_VENDOR_MASK    0x40      </span></div><div class="line"><a name="l00094"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gad48131dc5ca47b4b2def65e7bbc8442f">   94</a></span>&#160;<span class="preprocessor"></span><span class="comment">/* SETUP request recipient */</span><span class="preprocessor"></span></div><div class="line"><a name="l00095"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga59754621c21db801e11513ba06a3a02e">   95</a></span>&#160;<span class="preprocessor">#define USB_SETUP_RECIPIENT_DEVICE    0         </span></div><div class="line"><a name="l00096"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gac6ef27ac78140749f3607246f21c1471">   96</a></span>&#160;<span class="preprocessor">#define USB_SETUP_RECIPIENT_INTERFACE 1         </span></div><div class="line"><a name="l00097"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaa1a71b2e05ba5682c956d8dfdf01d40b">   97</a></span>&#160;<span class="preprocessor">#define USB_SETUP_RECIPIENT_ENDPOINT  2         </span></div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;<span class="preprocessor">#define USB_SETUP_RECIPIENT_OTHER     3         </span></div><div class="line"><a name="l00100"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaeba76c92af8f1a94982ec4cb767452f0">  100</a></span>&#160;<span class="preprocessor"></span><span class="comment">/* SETUP standard request codes for Full Speed devices */</span><span class="preprocessor"></span></div><div class="line"><a name="l00101"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga1908d37748e7d545ee5f190715624150">  101</a></span>&#160;<span class="preprocessor">#define GET_STATUS                0             </span></div><div class="line"><a name="l00102"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaf8b97e67097fbf7d56c3dcac52fe679e">  102</a></span>&#160;<span class="preprocessor">#define CLEAR_FEATURE             1             </span></div><div class="line"><a name="l00103"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gad3c9f5426c07d7d4da8cf1752a111576">  103</a></span>&#160;<span class="preprocessor">#define SET_FEATURE               3             </span></div><div class="line"><a name="l00104"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga115a1d866ed9498300d59c90549ead0d">  104</a></span>&#160;<span class="preprocessor">#define SET_ADDRESS               5             </span></div><div class="line"><a name="l00105"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga264a9bda1309d7cc0311d57274194ca3">  105</a></span>&#160;<span class="preprocessor">#define GET_DESCRIPTOR            6             </span></div><div class="line"><a name="l00106"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gac6bffdcb940a0338051c4baa72498beb">  106</a></span>&#160;<span class="preprocessor">#define SET_DESCRIPTOR            7             </span></div><div class="line"><a name="l00107"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga5cdfe3de183eb4e190b2ccaa299045bf">  107</a></span>&#160;<span class="preprocessor">#define GET_CONFIGURATION         8             </span></div><div class="line"><a name="l00108"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga1846f3a13493771ceced447397221de1">  108</a></span>&#160;<span class="preprocessor">#define SET_CONFIGURATION         9             </span></div><div class="line"><a name="l00109"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga90c9c23759bdbb3ba106f88cb5ffc261">  109</a></span>&#160;<span class="preprocessor">#define GET_INTERFACE             10            </span></div><div class="line"><a name="l00110"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga43c627a14ff41632fa9c234a3df41b2b">  110</a></span>&#160;<span class="preprocessor">#define SET_INTERFACE             11            </span></div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;<span class="preprocessor">#define SYNCH_FRAME               12            </span></div><div class="line"><a name="l00113"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3d4f67db0b3531f3493cde381110809d">  113</a></span>&#160;<span class="preprocessor"></span><span class="comment">/* SETUP class request codes */</span><span class="preprocessor"></span></div><div class="line"><a name="l00114"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga9d69e0dae00cf3c6c5dc5602f63b2f2f">  114</a></span>&#160;<span class="preprocessor">#define USB_HID_GET_REPORT        0x01          </span></div><div class="line"><a name="l00115"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaed6de2caf14f9caa049fab82902299cf">  115</a></span>&#160;<span class="preprocessor">#define USB_HID_GET_IDLE          0x02          </span></div><div class="line"><a name="l00116"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga1cbc5f99d9bd85fca7b9a624efb41078">  116</a></span>&#160;<span class="preprocessor">#define USB_HID_SET_REPORT        0x09          </span></div><div class="line"><a name="l00117"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga2058ed723b6a4613b4dcb8040b739684">  117</a></span>&#160;<span class="preprocessor">#define USB_HID_SET_IDLE          0x0A          </span></div><div class="line"><a name="l00118"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga966e7808b885ae6550ee7e4db352f73f">  118</a></span>&#160;<span class="preprocessor">#define USB_HID_SET_PROTOCOL      0x0B          </span></div><div class="line"><a name="l00119"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga6a417528ccce3c580c60a91da473151a">  119</a></span>&#160;<span class="preprocessor">#define USB_CDC_SETLINECODING     0x20          </span></div><div class="line"><a name="l00120"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaf920d182c6f903fb470728f673575765">  120</a></span>&#160;<span class="preprocessor">#define USB_CDC_GETLINECODING     0x21          </span></div><div class="line"><a name="l00121"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gacaa7d0840028b010059d18fe81d47f61">  121</a></span>&#160;<span class="preprocessor">#define USB_CDC_SETCTRLLINESTATE  0x22          </span></div><div class="line"><a name="l00122"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gac3bd62628124388b1c87b1f478b028c6">  122</a></span>&#160;<span class="preprocessor">#define USB_MSD_BOTRESET          0xFF          </span></div><div class="line"><a name="l00123"></a><span class="lineno">  123</span>&#160;<span class="preprocessor">#define USB_MSD_GETMAXLUN         0xFE          </span></div><div class="line"><a name="l00125"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gae6d736353df6b564adfc8034b4cd888b">  125</a></span>&#160;<span class="preprocessor"></span><span class="comment">/* SETUP command GET/SET_DESCRIPTOR decriptor types */</span><span class="preprocessor"></span></div><div class="line"><a name="l00126"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga255b06a613102c4438f98da8cf374b77">  126</a></span>&#160;<span class="preprocessor">#define USB_DEVICE_DESCRIPTOR             1     </span></div><div class="line"><a name="l00127"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga64ab6de48cce87b6b0318f47b0d81ded">  127</a></span>&#160;<span class="preprocessor">#define USB_CONFIG_DESCRIPTOR             2     </span></div><div class="line"><a name="l00128"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga09a5036ed62dcda9011836684ecbc83e">  128</a></span>&#160;<span class="preprocessor">#define USB_STRING_DESCRIPTOR             3     </span></div><div class="line"><a name="l00129"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga01c697098d067b7a297bdaf2e3e2a8a5">  129</a></span>&#160;<span class="preprocessor">#define USB_INTERFACE_DESCRIPTOR          4     </span></div><div class="line"><a name="l00130"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3bc1a7bd23c08c24345002122bae8db3">  130</a></span>&#160;<span class="preprocessor">#define USB_ENDPOINT_DESCRIPTOR           5     </span></div><div class="line"><a name="l00131"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga1d04224d57034654c35a87acfd81c128">  131</a></span>&#160;<span class="preprocessor">#define USB_DEVICE_QUALIFIER_DESCRIPTOR   6     </span></div><div class="line"><a name="l00132"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga8de18e268ac6046f000fce78362e500b">  132</a></span>&#160;<span class="preprocessor">#define USB_OTHER_SPEED_CONFIG_DESCRIPTOR 7     </span></div><div class="line"><a name="l00133"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaba8e9c165130d7837776daf9d6ddbb8e">  133</a></span>&#160;<span class="preprocessor">#define USB_INTERFACE_POWER_DESCRIPTOR    8     </span></div><div class="line"><a name="l00134"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga83aa5aabf780042441bfd1feb7ce9acc">  134</a></span>&#160;<span class="preprocessor">#define USB_HUB_DESCRIPTOR                0x29  </span></div><div class="line"><a name="l00135"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3025fb5c2c8253a9e6f432f70e9e1391">  135</a></span>&#160;<span class="preprocessor">#define USB_HID_DESCRIPTOR                0x21  </span></div><div class="line"><a name="l00136"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaddd4794bdc52d2a8352d027ac73b9e1c">  136</a></span>&#160;<span class="preprocessor">#define USB_HID_REPORT_DESCRIPTOR         0x22  </span></div><div class="line"><a name="l00137"></a><span class="lineno">  137</span>&#160;<span class="preprocessor">#define USB_CS_INTERFACE_DESCRIPTOR       0x24  </span></div><div class="line"><a name="l00139"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga30b596aed3f4d37df7df3a3ffb883c65">  139</a></span>&#160;<span class="preprocessor">#define USB_DEVICE_DESCSIZE               18    </span></div><div class="line"><a name="l00140"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gabaed245137ca1bc8be3c22de50845fe6">  140</a></span>&#160;<span class="preprocessor">#define USB_CONFIG_DESCSIZE               9     </span></div><div class="line"><a name="l00141"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3de2785fdddd667dfab0a6cb25863486">  141</a></span>&#160;<span class="preprocessor">#define USB_INTERFACE_DESCSIZE            9     </span></div><div class="line"><a name="l00142"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga646fd24198394e157762b1a5e405a665">  142</a></span>&#160;<span class="preprocessor">#define USB_ENDPOINT_DESCSIZE             7     </span></div><div class="line"><a name="l00143"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga25e947ec626a841b15e3dee53c33224e">  143</a></span>&#160;<span class="preprocessor">#define USB_DEVICE_QUALIFIER_DESCSIZE     10    </span></div><div class="line"><a name="l00144"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gac5c4b521eadb200a4b92c32cb8da88df">  144</a></span>&#160;<span class="preprocessor">#define USB_OTHER_SPEED_CONFIG_DESCSIZE   9     </span></div><div class="line"><a name="l00145"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga5d827a053d5527e78e5e607b95334c72">  145</a></span>&#160;<span class="preprocessor">#define USB_HID_DESCSIZE                  9     </span></div><div class="line"><a name="l00146"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga8992f1d4cd77b43cdf92ccb3cb947790">  146</a></span>&#160;<span class="preprocessor">#define USB_CDC_HEADER_FND_DESCSIZE       5     </span></div><div class="line"><a name="l00147"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gac8b5f1b81f755631cda4b482094106af">  147</a></span>&#160;<span class="preprocessor">#define USB_CDC_CALLMNG_FND_DESCSIZE      5     </span></div><div class="line"><a name="l00148"></a><span class="lineno">  148</span>&#160;<span class="preprocessor">#define USB_CDC_ACM_FND_DESCSIZE          4     </span></div><div class="line"><a name="l00150"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gadf89a62ea2fad945456130a90ebfcc91">  150</a></span>&#160;<span class="preprocessor"></span><span class="comment">/* Misc. USB definitions */</span><span class="preprocessor"></span></div><div class="line"><a name="l00151"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3ecb6faab4ec4ef3aa1ff7a805f69cd3">  151</a></span>&#160;<span class="preprocessor">#define USB_EP0_SIZE           8               </span></div><div class="line"><a name="l00152"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gad1442f0494ff3d70376983119243a029">  152</a></span>&#160;<span class="preprocessor">#define USB_EP1_SIZE           8               </span></div><div class="line"><a name="l00153"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaa7d90502b6d7bf52f926b154b56e1e3b">  153</a></span>&#160;<span class="preprocessor">#define USB_EP2_SIZE           8               </span></div><div class="line"><a name="l00154"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaf8f385b22753e9494b7ad547c09c5dd5">  154</a></span>&#160;<span class="preprocessor">#define USB_EP3_SIZE           64              </span></div><div class="line"><a name="l00155"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga800eab1e6de38d174f85661e811a23d7">  155</a></span>&#160;<span class="preprocessor">#define USB_EP4_SIZE           32              </span></div><div class="line"><a name="l00156"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga0b772377522af43456dc80d1d25a18cf">  156</a></span>&#160;<span class="preprocessor">#define USB_EP5_SIZE           64              </span></div><div class="line"><a name="l00157"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga733e19abbc86b2117621d41d8d554f42">  157</a></span>&#160;<span class="preprocessor">#define USB_EP6_SIZE           512             </span></div><div class="line"><a name="l00158"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga95b74d966c16ae5fec01e0d6cd26fdac">  158</a></span>&#160;<span class="preprocessor">#define USB_MAX_EP_SIZE        64               </span></div><div class="line"><a name="l00159"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga0dbf24bb855831e223a695384bfd9409">  159</a></span>&#160;<span class="preprocessor">#define USB_EPTYPE_CTRL        0                </span></div><div class="line"><a name="l00160"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga2e0da3e7ed8f844ab9322b6cf5b5a84b">  160</a></span>&#160;<span class="preprocessor">#define USB_EPTYPE_ISOC        1                </span></div><div class="line"><a name="l00161"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga5afdd9301e4641dbd23dc1d994958f86">  161</a></span>&#160;<span class="preprocessor">#define USB_EPTYPE_BULK        2                </span></div><div class="line"><a name="l00162"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaae8411e95f26738326bc25a0161dde99">  162</a></span>&#160;<span class="preprocessor">#define USB_EPTYPE_INTR        3                </span></div><div class="line"><a name="l00163"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga7f648066973aee444128ebbe131da8ca">  163</a></span>&#160;<span class="preprocessor">#define USB_EP_DIR_IN          0x80             </span></div><div class="line"><a name="l00164"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga06cd3bc995e8bf1d1b4d6958323c98d8">  164</a></span>&#160;<span class="preprocessor">#define USB_SETUP_PKT_SIZE     8                </span></div><div class="line"><a name="l00165"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga00bcd7b4a0061d271df3bf9c59d12c10">  165</a></span>&#160;<span class="preprocessor">#define USB_EPNUM_MASK         0x0F             </span></div><div class="line"><a name="l00166"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga0e5e61a43fa8c7d415d59f319ef4e941">  166</a></span>&#160;<span class="preprocessor">#define USB_LANGID_ENUS        0x0409           </span></div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;<span class="preprocessor">#define USB_MAX_DEVICE_ADDRESS 127              </span></div><div class="line"><a name="l00169"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga72b63fce9af5b848f683ded584bc9301">  169</a></span>&#160;<span class="preprocessor">#define CONFIG_DESC_BM_REMOTEWAKEUP 0x20        </span></div><div class="line"><a name="l00170"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga4ad529e7c349e280a6c9268d9b872b77">  170</a></span>&#160;<span class="preprocessor">#define CONFIG_DESC_BM_SELFPOWERED  0x40        </span></div><div class="line"><a name="l00171"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga37edda82028e35831f6b321d57eb6c6c">  171</a></span>&#160;<span class="preprocessor">#define CONFIG_DESC_BM_RESERVED_D7  0x80        </span></div><div class="line"><a name="l00172"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga74dae1d42500a1b618c5df4a4a07d36f">  172</a></span>&#160;<span class="preprocessor">#define CONFIG_DESC_BM_TRANSFERTYPE 0x03        </span></div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="preprocessor">#define CONFIG_DESC_MAXPOWER_mA(x)  (((x) + 1) / 2) </span></div><div class="line"><a name="l00175"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaf2638957fbd8109328c2b81066e1bd69">  175</a></span>&#160;<span class="preprocessor">#define DEVICE_IS_SELFPOWERED       0x0001      </span></div><div class="line"><a name="l00176"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga0a75e9871273bf2c40d1d9aa1641c8ce">  176</a></span>&#160;<span class="preprocessor">#define REMOTE_WAKEUP_ENABLED       0x0002      </span></div><div class="line"><a name="l00177"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gab75da7fec6dd00924f1d9f4e3c587a6f">  177</a></span>&#160;<span class="preprocessor">#define USB_FEATURE_ENDPOINT_HALT         0     </span></div><div class="line"><a name="l00178"></a><span class="lineno">  178</span>&#160;<span class="preprocessor">#define USB_FEATURE_DEVICE_REMOTE_WAKEUP  1     </span></div><div class="line"><a name="l00180"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaf32e982ee7adb585a4cef54d199527b3">  180</a></span>&#160;<span class="preprocessor">#define HUB_FEATURE_PORT_RESET            4     </span></div><div class="line"><a name="l00181"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gafc369f4d229b302ca399869133ce2cfc">  181</a></span>&#160;<span class="preprocessor">#define HUB_FEATURE_PORT_POWER            8     </span></div><div class="line"><a name="l00182"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga97c9f66303545a7eac83ec46f930f5cc">  182</a></span>&#160;<span class="preprocessor">#define HUB_FEATURE_C_PORT_CONNECTION     16    </span></div><div class="line"><a name="l00183"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga1df89414312fa75a3c9819970a6fc038">  183</a></span>&#160;<span class="preprocessor">#define HUB_FEATURE_C_PORT_RESET          20    </span></div><div class="line"><a name="l00184"></a><span class="lineno">  184</span>&#160;<span class="preprocessor">#define HUB_FEATURE_PORT_INDICATOR        22    </span></div><div class="line"><a name="l00186"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga7dae7df3ce2685f96775f2a0fb8658ae">  186</a></span>&#160;<span class="preprocessor">#define USB_CLASS_CDC                     2     </span></div><div class="line"><a name="l00187"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3a41a918c23a159e53eb9e863ede2c28">  187</a></span>&#160;<span class="preprocessor">#define USB_CLASS_CDC_DATA                0x0A  </span></div><div class="line"><a name="l00188"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaa6ef27b90b8677aa6f16e3893a7be1e3">  188</a></span>&#160;<span class="preprocessor">#define USB_CLASS_CDC_ACM                 2     </span></div><div class="line"><a name="l00189"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3912ce7b04ccb0515bbff347493a8f77">  189</a></span>&#160;<span class="preprocessor">#define USB_CLASS_CDC_HFN                 0     </span></div><div class="line"><a name="l00190"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gae6a88340f04c166ee84e65d3ba7a69f4">  190</a></span>&#160;<span class="preprocessor">#define USB_CLASS_CDC_CMNGFN              1     </span></div><div class="line"><a name="l00191"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga02bf6c679350060fcdcb73c142004ccf">  191</a></span>&#160;<span class="preprocessor">#define USB_CLASS_CDC_ACMFN               2     </span></div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="preprocessor">#define USB_CLASS_CDC_UNIONFN             6     </span></div><div class="line"><a name="l00194"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaee141fcfa6324644f59f252bdf79def5">  194</a></span>&#160;<span class="preprocessor">#define USB_CLASS_HID                     3     </span></div><div class="line"><a name="l00195"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga0ecc4b513adb273cf7a7fa958eda0d4e">  195</a></span>&#160;<span class="preprocessor">#define USB_CLASS_HID_KEYBOARD            1     </span></div><div class="line"><a name="l00196"></a><span class="lineno">  196</span>&#160;<span class="preprocessor">#define USB_CLASS_HID_MOUSE               2     </span></div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="preprocessor">#define USB_CLASS_HUB                     9     </span></div><div class="line"><a name="l00200"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga0c9e0388f45748ea1893a84af296baf4">  200</a></span>&#160;<span class="preprocessor">#define USB_CLASS_MSD                     8     </span></div><div class="line"><a name="l00201"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gae12c3689d0d97e1edfddec03322e5306">  201</a></span>&#160;<span class="preprocessor">#define USB_CLASS_MSD_BOT_TRANSPORT       0x50  </span></div><div class="line"><a name="l00202"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga3dac9b6e7d5e5ae5af60e5b483d3f82a">  202</a></span>&#160;<span class="preprocessor">#define USB_CLASS_MSD_SCSI_CMDSET         6     </span></div><div class="line"><a name="l00203"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga510d76d9d3b0f6d6d48f3f4c14141a5b">  203</a></span>&#160;<span class="preprocessor">#define USB_CLASS_MSD_CSW_CMDPASSED       0     </span></div><div class="line"><a name="l00204"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga4b215113e7b76d52f9d31535dde37955">  204</a></span>&#160;<span class="preprocessor">#define USB_CLASS_MSD_CSW_CMDFAILED       1     </span></div><div class="line"><a name="l00205"></a><span class="lineno">  205</span>&#160;<span class="preprocessor">#define USB_CLASS_MSD_CSW_PHASEERROR      2     </span></div><div class="line"><a name="l00207"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gab35af8fb505263e1e594d07f9e5c8253">  207</a></span>&#160;<span class="preprocessor">#define PORT_FULL_SPEED                   1     </span></div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<span class="preprocessor">#define PORT_LOW_SPEED                    2     </span></div><div class="line"><a name="l00211"></a><span class="lineno">  211</span>&#160;<span class="preprocessor"></span><span class="comment">/*** -------------------- Helper Macros -------------------- ***/</span><span class="preprocessor"></span></div><div class="line"><a name="l00212"></a><span class="lineno">  212</span>&#160;</div><div class="line"><a name="l00214"></a><span class="lineno">  214</span>&#160;<span class="preprocessor">#define EFM32_MIN(a, b)    ((a) &lt; (b) ? (a) : (b))</span></div><div class="line"><a name="l00215"></a><span class="lineno">  215</span>&#160;</div><div class="line"><a name="l00217"></a><span class="lineno">  217</span>&#160;<span class="preprocessor">#define EFM32_MAX(a, b)    ((a) &gt; (b) ? (a) : (b))</span></div><div class="line"><a name="l00218"></a><span class="lineno">  218</span>&#160;</div><div class="line"><a name="l00219"></a><span class="lineno">  219</span>&#160;<span class="preprocessor">#if !defined(__GNUC__)</span></div><div class="line"><a name="l00220"></a><span class="lineno">  220</span>&#160;</div><div class="line"><a name="l00221"></a><span class="lineno">  221</span>&#160;<span class="preprocessor">#define STRINGIZE(X) #X</span></div><div class="line"><a name="l00222"></a><span class="lineno">  222</span>&#160;<span class="preprocessor">#define EFM32_PACK_START(X) _Pragma(STRINGIZE(pack(X)))</span></div><div class="line"><a name="l00223"></a><span class="lineno">  223</span>&#160;<span class="preprocessor">#define EFM32_PACK_END()    _Pragma(&quot;pack()&quot;)</span></div><div class="line"><a name="l00224"></a><span class="lineno">  224</span>&#160;<span class="preprocessor">#define __attribute__(...)</span></div><div class="line"><a name="l00225"></a><span class="lineno">  225</span>&#160;</div><div class="line"><a name="l00226"></a><span class="lineno">  226</span>&#160;<span class="preprocessor">#ifdef __CC_ARM</span></div><div class="line"><a name="l00227"></a><span class="lineno">  227</span>&#160;</div><div class="line"><a name="l00229"></a><span class="lineno">  229</span>&#160;<span class="preprocessor">#define EFM32_ALIGN(X) __align(X)</span></div><div class="line"><a name="l00230"></a><span class="lineno">  230</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00231"></a><span class="lineno">  231</span>&#160;<span class="preprocessor">#ifdef __ICCARM__</span></div><div class="line"><a name="l00232"></a><span class="lineno">  232</span>&#160;</div><div class="line"><a name="l00234"></a><span class="lineno">  234</span>&#160;<span class="preprocessor">#define EFM32_ALIGN(X) _Pragma(STRINGIZE(data_alignment = X))</span></div><div class="line"><a name="l00235"></a><span class="lineno">  235</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00236"></a><span class="lineno">  236</span>&#160;</div><div class="line"><a name="l00237"></a><span class="lineno">  237</span>&#160;<span class="preprocessor">#else // !defined(__GNUC__)</span></div><div class="line"><a name="l00238"></a><span class="lineno">  238</span>&#160;</div><div class="line"><a name="l00239"></a><span class="lineno">  239</span>&#160;<span class="preprocessor">#define EFM32_PACK_START(x)</span></div><div class="line"><a name="l00240"></a><span class="lineno">  240</span>&#160;<span class="preprocessor">#define EFM32_PACK_END()</span></div><div class="line"><a name="l00241"></a><span class="lineno">  241</span>&#160;<span class="preprocessor">#define EFM32_ALIGN(X)</span></div><div class="line"><a name="l00242"></a><span class="lineno">  242</span>&#160;</div><div class="line"><a name="l00243"></a><span class="lineno">  243</span>&#160;<span class="preprocessor">#endif // !defined(__GNUC__)</span></div><div class="line"><a name="l00244"></a><span class="lineno">  244</span>&#160;</div><div class="line"><a name="l00247"></a><span class="lineno">  247</span>&#160;<span class="preprocessor">#if defined(__GNUC__)                     </span><span class="comment">/* GCC compilers */</span><span class="preprocessor"></span></div><div class="line"><a name="l00248"></a><span class="lineno">  248</span>&#160;<span class="preprocessor">#if defined(__CHAR16_TYPE__)</span></div><div class="line"><a name="l00249"></a><span class="lineno">  249</span>&#160;<span class="keyword">typedef</span> __CHAR16_TYPE__ char16_t;</div><div class="line"><a name="l00250"></a><span class="lineno">  250</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00251"></a><span class="lineno">  251</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> char16_t;</div><div class="line"><a name="l00252"></a><span class="lineno">  252</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00253"></a><span class="lineno">  253</span>&#160;</div><div class="line"><a name="l00254"></a><span class="lineno">  254</span>&#160;<span class="preprocessor">#elif defined(__ICCARM__)                 </span><span class="comment">/* IAR compiler */</span><span class="preprocessor"></span></div><div class="line"><a name="l00255"></a><span class="lineno">  255</span>&#160;<span class="preprocessor">#include &lt;uchar.h&gt;</span></div><div class="line"><a name="l00256"></a><span class="lineno">  256</span>&#160;</div><div class="line"><a name="l00257"></a><span class="lineno">  257</span>&#160;<span class="preprocessor">#elif defined(__CC_ARM)                   </span><span class="comment">/* MDK-ARM compiler */</span><span class="preprocessor"></span></div><div class="line"><a name="l00258"></a><span class="lineno">  258</span>&#160;<span class="keyword">typedef</span> <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span> char16_t;</div><div class="line"><a name="l00259"></a><span class="lineno">  259</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00260"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga72cc554119c6e9e7df078ed347275a72">  260</a></span>&#160;</div><div class="line"><a name="l00261"></a><span class="lineno">  261</span>&#160;<span class="preprocessor">#define nibble2Ascii(n) ((n) + (((n) &lt; 10) ? &#39;0&#39;  : &#39;A&#39; - 10));</span></div><div class="line"><a name="l00262"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gadb90e69c07e271e8826264af82b4bbec">  262</a></span>&#160;</div><div class="line"><a name="l00263"></a><span class="lineno">  263</span>&#160;<span class="preprocessor">#define STATIC_CONST_STRING_DESC(_name, ...)                    \</span></div><div class="line"><a name="l00264"></a><span class="lineno">  264</span>&#160;<span class="preprocessor">  EFM32_PACK_START(1)                                           \</span></div><div class="line"><a name="l00265"></a><span class="lineno">  265</span>&#160;<span class="preprocessor">  typedef struct                                                \</span></div><div class="line"><a name="l00266"></a><span class="lineno">  266</span>&#160;<span class="preprocessor">  {                                                             \</span></div><div class="line"><a name="l00267"></a><span class="lineno">  267</span>&#160;<span class="preprocessor">    uint8_t len;                                                \</span></div><div class="line"><a name="l00268"></a><span class="lineno">  268</span>&#160;<span class="preprocessor">    uint8_t type;                                               \</span></div><div class="line"><a name="l00269"></a><span class="lineno">  269</span>&#160;<span class="preprocessor">    char16_t name[1 + sizeof((char16_t[]){ __VA_ARGS__ }) / 2]; \</span></div><div class="line"><a name="l00270"></a><span class="lineno">  270</span>&#160;<span class="preprocessor">  } __attribute__ ((packed)) _##_name;                          \</span></div><div class="line"><a name="l00271"></a><span class="lineno">  271</span>&#160;<span class="preprocessor">  EFM32_PACK_END()                                              \</span></div><div class="line"><a name="l00272"></a><span class="lineno">  272</span>&#160;<span class="preprocessor">  EFM32_ALIGN(4)                                                \</span></div><div class="line"><a name="l00273"></a><span class="lineno">  273</span>&#160;<span class="preprocessor">  EFM32_PACK_START(1)                                           \</span></div><div class="line"><a name="l00274"></a><span class="lineno">  274</span>&#160;<span class="preprocessor">  static const _##_name _name =                                 \</span></div><div class="line"><a name="l00275"></a><span class="lineno">  275</span>&#160;<span class="preprocessor">  {                                                             \</span></div><div class="line"><a name="l00276"></a><span class="lineno">  276</span>&#160;<span class="preprocessor">    .len  = sizeof(_##_name) - 2,                               \</span></div><div class="line"><a name="l00277"></a><span class="lineno">  277</span>&#160;<span class="preprocessor">    .type = USB_STRING_DESCRIPTOR,                              \</span></div><div class="line"><a name="l00278"></a><span class="lineno">  278</span>&#160;<span class="preprocessor">    .name = { __VA_ARGS__ },                                    \</span></div><div class="line"><a name="l00279"></a><span class="lineno">  279</span>&#160;<span class="preprocessor">    .name[((sizeof(_##_name) - 2) / 2) - 1] = &#39;\0&#39;              \</span></div><div class="line"><a name="l00280"></a><span class="lineno">  280</span>&#160;<span class="preprocessor">  }                                                             \</span></div><div class="line"><a name="l00281"></a><span class="lineno">  281</span>&#160;<span class="preprocessor">  EFM32_PACK_END()</span></div><div class="line"><a name="l00282"></a><span class="lineno">  282</span>&#160;</div><div class="line"><a name="l00286"></a><span class="lineno">  286</span>&#160;<span class="preprocessor">#define STATIC_CONST_STRING_DESC_LANGID(_name, x, y)         \</span></div><div class="line"><a name="l00287"></a><span class="lineno">  287</span>&#160;<span class="preprocessor">  EFM32_PACK_START(1)                                        \</span></div><div class="line"><a name="l00288"></a><span class="lineno">  288</span>&#160;<span class="preprocessor">  typedef struct                                             \</span></div><div class="line"><a name="l00289"></a><span class="lineno">  289</span>&#160;<span class="preprocessor">  {                                                          \</span></div><div class="line"><a name="l00290"></a><span class="lineno">  290</span>&#160;<span class="preprocessor">    uint8_t len;                                             \</span></div><div class="line"><a name="l00291"></a><span class="lineno">  291</span>&#160;<span class="preprocessor">    uint8_t type;                                            \</span></div><div class="line"><a name="l00292"></a><span class="lineno">  292</span>&#160;<span class="preprocessor">    uint8_t name[2];                                         \</span></div><div class="line"><a name="l00293"></a><span class="lineno">  293</span>&#160;<span class="preprocessor">  } _##_name;                                                \</span></div><div class="line"><a name="l00294"></a><span class="lineno">  294</span>&#160;<span class="preprocessor">  EFM32_PACK_END()                                           \</span></div><div class="line"><a name="l00295"></a><span class="lineno">  295</span>&#160;<span class="preprocessor">  EFM32_ALIGN(4)                                             \</span></div><div class="line"><a name="l00296"></a><span class="lineno">  296</span>&#160;<span class="preprocessor">  EFM32_PACK_START(1)                                        \</span></div><div class="line"><a name="l00297"></a><span class="lineno">  297</span>&#160;<span class="preprocessor">  static const _##_name _name __attribute__ ((aligned(4))) = \</span></div><div class="line"><a name="l00298"></a><span class="lineno">  298</span>&#160;<span class="preprocessor">  {                                                          \</span></div><div class="line"><a name="l00299"></a><span class="lineno">  299</span>&#160;<span class="preprocessor">    .len = 4,                                                \</span></div><div class="line"><a name="l00300"></a><span class="lineno">  300</span>&#160;<span class="preprocessor">    .type = USB_STRING_DESCRIPTOR,                           \</span></div><div class="line"><a name="l00301"></a><span class="lineno">  301</span>&#160;<span class="preprocessor">    .name = { y, x }                                         \</span></div><div class="line"><a name="l00302"></a><span class="lineno">  302</span>&#160;<span class="preprocessor">  }                                                          \</span></div><div class="line"><a name="l00303"></a><span class="lineno">  303</span>&#160;<span class="preprocessor">  EFM32_PACK_END()</span></div><div class="line"><a name="l00304"></a><span class="lineno">  304</span>&#160;</div><div class="line"><a name="l00309"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#ga6ebfcb1d36f8b5b124f2e3ec032a410c">  309</a></span>&#160;<span class="preprocessor">#if !defined(__GNUC__)</span></div><div class="line"><a name="l00310"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gaa057d31fe63604d11d6cec2b2b75e30c">  310</a></span>&#160;<span class="preprocessor">#define        UBUF(x, y) EFM32_ALIGN(4)        uint8_t x[((y) + 3) &amp; ~3]</span></div><div class="line"><a name="l00311"></a><span class="lineno">  311</span>&#160;<span class="preprocessor">#define STATIC_UBUF(x, y) EFM32_ALIGN(4) static uint8_t x[((y) + 3) &amp; ~3]</span></div><div class="line"><a name="l00312"></a><span class="lineno">  312</span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00313"></a><span class="lineno">  313</span>&#160;<span class="preprocessor">#define        UBUF(x, y)        uint8_t x[((y) + 3) &amp; ~3] __attribute__ ((aligned(4)))</span></div><div class="line"><a name="l00314"></a><span class="lineno">  314</span>&#160;</div><div class="line"><a name="l00319"></a><span class="lineno">  319</span>&#160;<span class="preprocessor">#define STATIC_UBUF(x, y) static uint8_t x[((y) + 3) &amp; ~3] __attribute__ ((aligned(4)))</span></div><div class="line"><a name="l00320"></a><span class="lineno">  320</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00321"></a><span class="lineno">  321</span>&#160;</div><div class="line"><a name="l00323"></a><span class="lineno">  323</span>&#160;<span class="keyword">typedef</span> <span class="keyword">enum</span> {</div><div class="line"><a name="l00324"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">  324</a></span>&#160;  <span class="comment">/* NOTE: Please keep in sync with table errMsg[] in em_usbhal.c */</span></div><div class="line"><a name="l00325"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a551e7a6fbdf7e891b8232818179fa229">  325</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a>              = 0,               </div><div class="line"><a name="l00326"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1afa326e98a111316089803b32218fa176">  326</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a551e7a6fbdf7e891b8232818179fa229">USB_STATUS_REQ_ERR</a>         = -1,              </div><div class="line"><a name="l00327"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1ae32e2e8da1dce5b54ea6542adabec3a4">  327</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1afa326e98a111316089803b32218fa176">USB_STATUS_EP_BUSY</a>         = -2,              </div><div class="line"><a name="l00328"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">  328</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1ae32e2e8da1dce5b54ea6542adabec3a4">USB_STATUS_REQ_UNHANDLED</a>   = -3,              </div><div class="line"><a name="l00329"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a48b7d77349a7cad390753b58e02adf56">  329</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a>         = -4,              </div><div class="line"><a name="l00330"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aaf5744aa348775f860ff2ff535c67ee7">  330</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a48b7d77349a7cad390753b58e02adf56">USB_STATUS_EP_STALLED</a>      = -5,              </div><div class="line"><a name="l00331"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1abb08e1a5c37f087b1f272fd764be40d2">  331</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aaf5744aa348775f860ff2ff535c67ee7">USB_STATUS_EP_ABORTED</a>      = -6,              </div><div class="line"><a name="l00332"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a14ada995fbc846cdd25a47bb84104b3d">  332</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1abb08e1a5c37f087b1f272fd764be40d2">USB_STATUS_EP_ERROR</a>        = -7,              </div><div class="line"><a name="l00333"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7e1a5aed008099af75161c3a45de3e58">  333</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a14ada995fbc846cdd25a47bb84104b3d">USB_STATUS_EP_NAK</a>          = -8,              </div><div class="line"><a name="l00334"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1ac04acd309cb435eb12ef691c2d791b4b">  334</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7e1a5aed008099af75161c3a45de3e58">USB_STATUS_DEVICE_UNCONFIGURED</a> = -9,          </div><div class="line"><a name="l00335"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a405b76e741623252f954e353aceaf11b">  335</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1ac04acd309cb435eb12ef691c2d791b4b">USB_STATUS_DEVICE_SUSPENDED</a>    = -10,         </div><div class="line"><a name="l00336"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a69c65b08dff316759c941351aa70a905">  336</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a405b76e741623252f954e353aceaf11b">USB_STATUS_DEVICE_RESET</a>    = -11,             </div><div class="line"><a name="l00337"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1af19192add0ff1bc76fff46fef7295f27">  337</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a69c65b08dff316759c941351aa70a905">USB_STATUS_TIMEOUT</a>         = -12,             </div><div class="line"><a name="l00338"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aab9974d621b469d47637c07d1ee0c29f">  338</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1af19192add0ff1bc76fff46fef7295f27">USB_STATUS_DEVICE_REMOVED</a>  = -13,             </div><div class="line"><a name="l00339"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aa9c73dd98ee624ee7d4b8f7c2ec7206b">  339</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aab9974d621b469d47637c07d1ee0c29f">USB_STATUS_HC_BUSY</a>         = -14,             </div><div class="line"><a name="l00340"></a><span class="lineno"><a class="line" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aa84fb30ea08f226b475c1bb137483023">  340</a></span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aa9c73dd98ee624ee7d4b8f7c2ec7206b">USB_STATUS_DEVICE_MALFUNCTION</a> = -15,          </div><div class="line"><a name="l00341"></a><span class="lineno">  341</span>&#160;  <a class="code" href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aa84fb30ea08f226b475c1bb137483023">USB_STATUS_PORT_OVERCURRENT</a> = -16,            </div><div class="line"><a name="l00342"></a><span class="lineno">  342</span>&#160;} <a class="code" href="group__USB__COMMON.htm#ga889b575b566a663621c33eebf46272c1">USB_Status_TypeDef</a>;</div><div class="line"><a name="l00343"></a><span class="lineno">  343</span>&#160;</div><div class="line"><a name="l00346"></a><span class="lineno">  346</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00353"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">  353</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">enum</span> {</div><div class="line"><a name="l00354"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da01e32e620c7692ea767d99bb4120940b">  354</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">USBD_STATE_NONE</a>       = 0,                    </div><div class="line"><a name="l00355"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da47b9228ad86b300416ed28d2c2b7e5d3">  355</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da01e32e620c7692ea767d99bb4120940b">USBD_STATE_ATTACHED</a>   = 1,                    </div><div class="line"><a name="l00356"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da978c707d313eb49b70bc62dfae304048">  356</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da47b9228ad86b300416ed28d2c2b7e5d3">USBD_STATE_POWERED</a>    = 2,                    </div><div class="line"><a name="l00357"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da8abe2fca377f950a2a9c95316f5246be">  357</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da978c707d313eb49b70bc62dfae304048">USBD_STATE_DEFAULT</a>    = 3,                    </div><div class="line"><a name="l00358"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">  358</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da8abe2fca377f950a2a9c95316f5246be">USBD_STATE_ADDRESSED</a>  = 4,                    </div><div class="line"><a name="l00359"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">  359</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">USBD_STATE_CONFIGURED</a> = 4,                    </div><div class="line"><a name="l00360"></a><span class="lineno"><a class="line" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">  360</a></span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a>  = 6,                    </div><div class="line"><a name="l00361"></a><span class="lineno">  361</span>&#160;  <a class="code" href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">USBD_STATE_LASTMARKER</a> = 7,                    </div><div class="line"><a name="l00362"></a><span class="lineno">  362</span>&#160;} <a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d">USBD_State_TypeDef</a>;</div><div class="line"><a name="l00363"></a><span class="lineno">  363</span>&#160;</div><div class="line"><a name="l00370"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm">  370</a></span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00371"></a><span class="lineno">  371</span>&#160;typedef struct {</div><div class="line"><a name="l00372"></a><span class="lineno">  372</span>&#160;  <span class="keyword">union </span>{</div><div class="line"><a name="l00373"></a><span class="lineno">  373</span>&#160;    <span class="keyword">struct </span>{</div><div class="line"><a name="l00374"></a><span class="lineno">  374</span>&#160;      <span class="keyword">union </span>{</div><div class="line"><a name="l00375"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#a70a468962d098b9d66fb2b564412bc71">  375</a></span>&#160;        <span class="keyword">struct </span>{</div><div class="line"><a name="l00376"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#ad727d3a73acb94b1d0ba37542a21959b">  376</a></span>&#160;          uint8_t Recipient : 5;                </div><div class="line"><a name="l00377"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#a913c1d707e48c96242f64002e8b60e6f">  377</a></span>&#160;          uint8_t Type      : 2;                </div><div class="line"><a name="l00378"></a><span class="lineno">  378</span>&#160;          uint8_t Direction : 1;                </div><div class="line"><a name="l00379"></a><span class="lineno">  379</span>&#160;        };</div><div class="line"><a name="l00380"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#a82332b9c048fff0d95801daff2dcd433">  380</a></span>&#160;</div><div class="line"><a name="l00381"></a><span class="lineno">  381</span>&#160;        uint8_t bmRequestType;                  </div><div class="line"><a name="l00382"></a><span class="lineno">  382</span>&#160;      };</div><div class="line"><a name="l00383"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#ae5029ab72d017ffc7ecbe319250b673a">  383</a></span>&#160;</div><div class="line"><a name="l00384"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#a668bf675fd2d40afb995d23e6e03a7d3">  384</a></span>&#160;      uint8_t bRequest;                         </div><div class="line"><a name="l00385"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#ae906e4bb150f8c859e7bc945bec15761">  385</a></span>&#160;      uint16_t wValue;                          </div><div class="line"><a name="l00386"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#a144a954da389673e95ee9fbdae12d347">  386</a></span>&#160;      uint16_t wIndex;                          </div><div class="line"><a name="l00387"></a><span class="lineno">  387</span>&#160;      uint16_t wLength;                         </div><div class="line"><a name="l00388"></a><span class="lineno">  388</span>&#160;    };</div><div class="line"><a name="l00389"></a><span class="lineno"><a class="line" href="structUSB__Setup__TypeDef.htm#ac69bbca56b763a1d1142776a97d977fe">  389</a></span>&#160;</div><div class="line"><a name="l00390"></a><span class="lineno">  390</span>&#160;    uint32_t dw[2];</div><div class="line"><a name="l00391"></a><span class="lineno">  391</span>&#160;  };</div><div class="line"><a name="l00392"></a><span class="lineno">  392</span>&#160;}  <a class="code" href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a> ((packed)) <a class="code" href="structUSB__Setup__TypeDef.htm">USB_Setup_TypeDef</a>;</div><div class="line"><a name="l00393"></a><span class="lineno">  393</span>&#160;EFM32_PACK_END()</div><div class="line"><a name="l00394"></a><span class="lineno">  394</span>&#160;</div><div class="line"><a name="l00396"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm">  396</a></span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00397"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a6e404a9da8a59fbc3081cd3cba3c093a">  397</a></span>&#160;typedef struct {</div><div class="line"><a name="l00398"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#ad9842e78413979458f03ac5ee27544d0">  398</a></span>&#160;  uint8_t bLength;                              </div><div class="line"><a name="l00399"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a5cd87d581caeb5940bbb86d6c43773ed">  399</a></span>&#160;  uint8_t bDescriptorType;                      </div><div class="line"><a name="l00400"></a><span class="lineno">  400</span>&#160;  uint16_t bcdUSB;                              </div><div class="line"><a name="l00402"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a85c104fd3160a9e2c9544fa169f06e59">  402</a></span>&#160;  uint8_t bDeviceClass;                         </div><div class="line"><a name="l00403"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#ad45c63c10a6b8d1893cbf0186cd924e0">  403</a></span>&#160;  uint8_t bDeviceSubClass;                      </div><div class="line"><a name="l00404"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#abc268b6fa37575fdc8072b770abdb9d9">  404</a></span>&#160;  uint8_t bDeviceProtocol;                      </div><div class="line"><a name="l00405"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a1e99547988357fa1ab7dda3a95ac04f7">  405</a></span>&#160;  uint8_t bMaxPacketSize0;                      </div><div class="line"><a name="l00406"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a4a155878a5fe337f4e358920cb1a8191">  406</a></span>&#160;  uint16_t idVendor;                            </div><div class="line"><a name="l00407"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#ac3c06609311cf168f74e99cb624f3d8f">  407</a></span>&#160;  uint16_t idProduct;                           </div><div class="line"><a name="l00408"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a1c6080b3e081e23f1c270d23ab3eb2a8">  408</a></span>&#160;  uint16_t bcdDevice;                           </div><div class="line"><a name="l00409"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#a16e9ce8bec78927eb2d789a3fb9e37bc">  409</a></span>&#160;  uint8_t iManufacturer;                        </div><div class="line"><a name="l00410"></a><span class="lineno"><a class="line" href="structUSB__DeviceDescriptor__TypeDef.htm#ab889285b543baf0d04b9b5e8defb198d">  410</a></span>&#160;  uint8_t iProduct;                             </div><div class="line"><a name="l00411"></a><span class="lineno">  411</span>&#160;  uint8_t iSerialNumber;                        </div><div class="line"><a name="l00413"></a><span class="lineno">  413</span>&#160;  uint8_t bNumConfigurations;                   </div><div class="line"><a name="l00414"></a><span class="lineno">  414</span>&#160;} <a class="code" href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a> ((packed)) <a class="code" href="structUSB__DeviceDescriptor__TypeDef.htm">USB_DeviceDescriptor_TypeDef</a>;</div><div class="line"><a name="l00415"></a><span class="lineno">  415</span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00416"></a><span class="lineno">  416</span>&#160;</div><div class="line"><a name="l00418"></a><span class="lineno"><a class="line" href="structUSB__ConfigurationDescriptor__TypeDef.htm">  418</a></span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00419"></a><span class="lineno"><a class="line" href="structUSB__ConfigurationDescriptor__TypeDef.htm#a74a56aef20a25bcbaaf2f2847657270c">  419</a></span>&#160;typedef struct {</div><div class="line"><a name="l00420"></a><span class="lineno"><a class="line" href="structUSB__ConfigurationDescriptor__TypeDef.htm#a1156640fd0a4fd1bb412767d31b09728">  420</a></span>&#160;  uint8_t bLength;                              </div><div class="line"><a name="l00421"></a><span class="lineno"><a class="line" href="structUSB__ConfigurationDescriptor__TypeDef.htm#acf246515d641b69d4a1d829808deeeca">  421</a></span>&#160;  uint8_t bDescriptorType;                      </div><div class="line"><a name="l00422"></a><span class="lineno">  422</span>&#160;  uint16_t wTotalLength;                        </div><div class="line"><a name="l00427"></a><span class="lineno">  427</span>&#160;  uint8_t bNumInterfaces;                       </div><div class="line"><a name="l00429"></a><span class="lineno">  429</span>&#160;  uint8_t bConfigurationValue;                  </div><div class="line"><a name="l00432"></a><span class="lineno">  432</span>&#160;  uint8_t iConfiguration;                       </div><div class="line"><a name="l00434"></a><span class="lineno">  434</span>&#160;  uint8_t bmAttributes;                         </div><div class="line"><a name="l00439"></a><span class="lineno">  439</span>&#160;  uint8_t bMaxPower;                            </div><div class="line"><a name="l00441"></a><span class="lineno">  441</span>&#160;} <a class="code" href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a> ((packed)) <a class="code" href="structUSB__ConfigurationDescriptor__TypeDef.htm">USB_ConfigurationDescriptor_TypeDef</a>;</div><div class="line"><a name="l00442"></a><span class="lineno">  442</span>&#160;EFM32_PACK_END()</div><div class="line"><a name="l00443"></a><span class="lineno">  443</span>&#160;</div><div class="line"><a name="l00445"></a><span class="lineno"><a class="line" href="structUSB__InterfaceDescriptor__TypeDef.htm">  445</a></span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00446"></a><span class="lineno"><a class="line" href="structUSB__InterfaceDescriptor__TypeDef.htm#a9bf7796350d45356a013351ec7a59dc9">  446</a></span>&#160;typedef struct {</div><div class="line"><a name="l00447"></a><span class="lineno"><a class="line" href="structUSB__InterfaceDescriptor__TypeDef.htm#a8a6d3c3083c3b4c13ceeb16b619d8292">  447</a></span>&#160;  uint8_t bLength;                              </div><div class="line"><a name="l00448"></a><span class="lineno"><a class="line" href="structUSB__InterfaceDescriptor__TypeDef.htm#ab7c3b5907069a0895e95f0524356071d">  448</a></span>&#160;  uint8_t bDescriptorType;                      </div><div class="line"><a name="l00449"></a><span class="lineno">  449</span>&#160;  uint8_t bInterfaceNumber;                     </div><div class="line"><a name="l00452"></a><span class="lineno">  452</span>&#160;  uint8_t bAlternateSetting;                    </div><div class="line"><a name="l00454"></a><span class="lineno">  454</span>&#160;  uint8_t bNumEndpoints;                        </div><div class="line"><a name="l00457"></a><span class="lineno">  457</span>&#160;  uint8_t bInterfaceClass;                      </div><div class="line"><a name="l00462"></a><span class="lineno">  462</span>&#160;  uint8_t bInterfaceSubClass;                   </div><div class="line"><a name="l00468"></a><span class="lineno">  468</span>&#160;  uint8_t bInterfaceProtocol;                   </div><div class="line"><a name="l00478"></a><span class="lineno">  478</span>&#160;  uint8_t iInterface;                           </div><div class="line"><a name="l00480"></a><span class="lineno">  480</span>&#160;} <a class="code" href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a> ((packed)) <a class="code" href="structUSB__InterfaceDescriptor__TypeDef.htm">USB_InterfaceDescriptor_TypeDef</a>;</div><div class="line"><a name="l00481"></a><span class="lineno">  481</span>&#160;EFM32_PACK_END()</div><div class="line"><a name="l00482"></a><span class="lineno">  482</span>&#160;</div><div class="line"><a name="l00484"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm">  484</a></span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00485"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm#aef83b784c6620c1d0314041e348c9491">  485</a></span>&#160;typedef struct {</div><div class="line"><a name="l00486"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm#ae3bd528501890fc780e2914fc96e7fd9">  486</a></span>&#160;  uint8_t bLength;                              </div><div class="line"><a name="l00487"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm#a75d10250f7655c93e0425bbeff65b595">  487</a></span>&#160;  uint8_t bDescriptorType;                      </div><div class="line"><a name="l00488"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm#acd16c673693929a051c5996527c5782a">  488</a></span>&#160;  uint8_t bEndpointAddress;                     </div><div class="line"><a name="l00489"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm#acbc03e1419bc9b2bc449e8ffff75aac4">  489</a></span>&#160;  uint8_t bmAttributes;                         </div><div class="line"><a name="l00490"></a><span class="lineno"><a class="line" href="structUSB__EndpointDescriptor__TypeDef.htm#a977748047c7d22bd4194cb8c92a6f60c">  490</a></span>&#160;  uint16_t wMaxPacketSize;                      </div><div class="line"><a name="l00491"></a><span class="lineno">  491</span>&#160;  uint8_t bInterval;                            </div><div class="line"><a name="l00492"></a><span class="lineno">  492</span>&#160;} <a class="code" href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a> ((packed)) <a class="code" href="structUSB__EndpointDescriptor__TypeDef.htm">USB_EndpointDescriptor_TypeDef</a>;</div><div class="line"><a name="l00493"></a><span class="lineno">  493</span>&#160;EFM32_PACK_END()</div><div class="line"><a name="l00494"></a><span class="lineno">  494</span>&#160;</div><div class="line"><a name="l00496"></a><span class="lineno"><a class="line" href="structUSB__StringDescriptor__TypeDef.htm">  496</a></span>&#160;EFM32_PACK_START(1)</div><div class="line"><a name="l00497"></a><span class="lineno"><a class="line" href="structUSB__StringDescriptor__TypeDef.htm#aec679edb94b33ee9f7e57309e17ec8a6">  497</a></span>&#160;typedef struct {</div><div class="line"><a name="l00498"></a><span class="lineno"><a class="line" href="structUSB__StringDescriptor__TypeDef.htm#a4ec16baf6f1133f28821e1a217d08143">  498</a></span>&#160;  uint8_t len;                                  </div><div class="line"><a name="l00499"></a><span class="lineno"><a class="line" href="structUSB__StringDescriptor__TypeDef.htm#a4d3f267ba701407b5e7f287a527037ad">  499</a></span>&#160;  uint8_t type;                                 </div><div class="line"><a name="l00500"></a><span class="lineno">  500</span>&#160;  char16_t name[];                              </div><div class="line"><a name="l00501"></a><span class="lineno">  501</span>&#160;} <a class="code" href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a> ((packed)) <a class="code" href="structUSB__StringDescriptor__TypeDef.htm">USB_StringDescriptor_TypeDef</a>;</div><div class="line"><a name="l00502"></a><span class="lineno">  502</span>&#160;EFM32_PACK_END()</div><div class="line"><a name="l00503"></a><span class="lineno">  503</span>&#160;</div><div class="line"><a name="l00504"></a><span class="lineno">  504</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00527"></a><span class="lineno">  527</span>&#160;typedef <span class="keywordtype">int</span> (*<a class="code" href="group__USB__COMMON.htm#ga2fa15407a4ef650bbd9f69dbddad6977">USB_XferCompleteCb_TypeDef</a>)(<a class="code" href="group__USB__COMMON.htm#ga889b575b566a663621c33eebf46272c1">USB_Status_TypeDef</a> status, uint32_t xferred, uint32_t remaining);</div><div class="line"><a name="l00528"></a><span class="lineno">  528</span>&#160;</div><div class="line"><a name="l00529"></a><span class="lineno">  529</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00537"></a><span class="lineno">  537</span>&#160;typedef <span class="keywordtype">void</span> (*<a class="code" href="group__USB__COMMON.htm#ga102c5dc66bd90f5209e00ed6f0a6ff4a">USBTIMER_Callback_TypeDef</a>)(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00538"></a><span class="lineno">  538</span>&#160;</div><div class="line"><a name="l00539"></a><span class="lineno">  539</span>&#160;<span class="keywordtype">void</span>  <a class="code" href="group__USB__COMMON.htm#gabb1c11cad365c7c3b99a3e7826035951">USBTIMER_DelayMs</a>(uint32_t msec);</div><div class="line"><a name="l00540"></a><span class="lineno">  540</span>&#160;<span class="keywordtype">void</span>  <a class="code" href="group__USB__COMMON.htm#gafef1ec052374683fb7f26c5d27645e2c">USBTIMER_DelayUs</a>(uint32_t usec);</div><div class="line"><a name="l00541"></a><span class="lineno">  541</span>&#160;<span class="keywordtype">void</span>  <a class="code" href="group__USB__COMMON.htm#ga21c87b800d87fd731173dd4f48f23c28">USBTIMER_Init</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00542"></a><span class="lineno">  542</span>&#160;<span class="keywordtype">void</span>  <a class="code" href="group__USB__COMMON.htm#gac2a406f16d989b04c4fc5b37d5c10b45">USBTIMER_Start</a>(uint32_t <span class="keywordtype">id</span>, uint32_t timeout, <a class="code" href="group__USB__COMMON.htm#ga102c5dc66bd90f5209e00ed6f0a6ff4a">USBTIMER_Callback_TypeDef</a> callback);</div><div class="line"><a name="l00543"></a><span class="lineno">  543</span>&#160;<span class="keywordtype">void</span>  <a class="code" href="group__USB__COMMON.htm#gab73c922427cf0d509788a8063451703f">USBTIMER_Stop</a>(uint32_t <span class="keywordtype">id</span>);</div><div class="line"><a name="l00544"></a><span class="lineno">  544</span>&#160;</div><div class="line"><a name="l00547"></a><span class="lineno">  547</span>&#160;<span class="preprocessor">#if defined(NUM_APP_TIMERS)</span></div><div class="line"><a name="l00548"></a><span class="lineno">  548</span>&#160;<span class="preprocessor">  #define NUM_QTIMERS (NUM_APP_TIMERS)</span></div><div class="line"><a name="l00549"></a><span class="lineno"><a class="line" href="em__usb_8h.htm#a76145004e89ba4f000a0600c09981e09">  549</a></span>&#160;<span class="preprocessor">#else</span></div><div class="line"><a name="l00550"></a><span class="lineno">  550</span>&#160;<span class="preprocessor">  #define NUM_QTIMERS 0</span></div><div class="line"><a name="l00551"></a><span class="lineno">  551</span>&#160;<span class="preprocessor">#endif</span></div><div class="line"><a name="l00552"></a><span class="lineno">  552</span>&#160;</div><div class="line"><a name="l00556"></a><span class="lineno">  556</span>&#160;<span class="comment">/*** -------------------- DEVICE mode API definitions -------------------- ***/</span></div><div class="line"><a name="l00557"></a><span class="lineno">  557</span>&#160;</div><div class="line"><a name="l00558"></a><span class="lineno">  558</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00564"></a><span class="lineno">  564</span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="group__USB__DEVICE.htm#ga34f1b34e168438a4d2b475bef5103820">USBD_UsbResetCb_TypeDef</a>)(void);</div><div class="line"><a name="l00565"></a><span class="lineno">  565</span>&#160;</div><div class="line"><a name="l00566"></a><span class="lineno">  566</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00576"></a><span class="lineno">  576</span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="group__USB__DEVICE.htm#ga6ed47bd813327a60229b6b9e90a331c0">USBD_SofIntCb_TypeDef</a>)(uint16_t sofNr);</div><div class="line"><a name="l00577"></a><span class="lineno">  577</span>&#160;</div><div class="line"><a name="l00578"></a><span class="lineno">  578</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00591"></a><span class="lineno">  591</span>&#160;<span class="keyword">typedef</span> void (*<a class="code" href="group__USB__DEVICE.htm#ga437ac57b8fb58de07cf10ba94740b54a">USBD_DeviceStateChangeCb_TypeDef</a>)(<a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d">USBD_State_TypeDef</a> oldState, <a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d">USBD_State_TypeDef</a> newState);</div><div class="line"><a name="l00592"></a><span class="lineno">  592</span>&#160;</div><div class="line"><a name="l00593"></a><span class="lineno">  593</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00605"></a><span class="lineno">  605</span>&#160;<span class="keyword">typedef</span> bool (*<a class="code" href="group__USB__DEVICE.htm#ga8bb00f127c19df8b5b2ac421ae109082">USBD_IsSelfPoweredCb_TypeDef</a>)(void);</div><div class="line"><a name="l00606"></a><span class="lineno">  606</span>&#160;</div><div class="line"><a name="l00607"></a><span class="lineno">  607</span>&#160;<span class="comment">/***************************************************************************/</span></div><div class="line"><a name="l00625"></a><span class="lineno">  625</span>&#160;<span class="keyword">typedef</span> int (*<a class="code" href="group__USB__DEVICE.htm#gaf94f2cac2cddd3cc081888cc0d98a3e5">USBD_SetupCmdCb_TypeDef</a>)(<span class="keyword">const</span> <a class="code" href="structUSB__Setup__TypeDef.htm">USB_Setup_TypeDef</a> *setup);</div><div class="line"><a name="l00626"></a><span class="lineno">  626</span>&#160;</div><div class="line"><a name="l00628"></a><span class="lineno">  628</span>&#160;<span class="keyword">struct </span><a class="code" href="structUSBD__Callbacks__TypeDef.htm">USBD_Callbacks_TypeDef</a>;</div><div class="line"><a name="l00629"></a><span class="lineno">  629</span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structUSBD__Callbacks__TypeDef.htm">USBD_Callbacks_TypeDef</a> const *USBD_Callbacks_TypeDef_Pointer;</div><div class="line"><a name="l00630"></a><span class="lineno">  630</span>&#160;</div><div class="line"><a name="l00636"></a><span class="lineno"><a class="line" href="structUSBD__Init__TypeDef.htm#a9b34de34ccc1726c268b646419f5a1b4">  636</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span>{</div><div class="line"><a name="l00637"></a><span class="lineno"><a class="line" href="structUSBD__Init__TypeDef.htm#a0a79a532500f7d8618fdcf491a5a7b13">  637</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="structUSB__DeviceDescriptor__TypeDef.htm">USB_DeviceDescriptor_TypeDef</a>      *deviceDescriptor;      </div><div class="line"><a name="l00638"></a><span class="lineno"><a class="line" href="structUSBD__Init__TypeDef.htm#add4d80f6bf26ff2fe67485ec12284a4c">  638</a></span>&#160;  <span class="keyword">const</span> uint8_t                           *configDescriptor;      </div><div class="line"><a name="l00639"></a><span class="lineno"><a class="line" href="structUSBD__Init__TypeDef.htm#a7dffaf3d3163e86be4304269d89047a1">  639</a></span>&#160;  <span class="keyword">const</span> <span class="keywordtype">void</span> * <span class="keyword">const</span>                      *stringDescriptors;     </div><div class="line"><a name="l00640"></a><span class="lineno"><a class="line" href="structUSBD__Init__TypeDef.htm#adac2ad6ec2b476697054bf4d442d2e61">  640</a></span>&#160;  <span class="keyword">const</span> uint8_t numberOfStrings;                                  </div><div class="line"><a name="l00641"></a><span class="lineno">  641</span>&#160;  <span class="keyword">const</span> uint8_t                           *bufferingMultiplier;   </div><div class="line"><a name="l00646"></a><span class="lineno">  646</span>&#160;  USBD_Callbacks_TypeDef_Pointer callbacks;                       </div><div class="line"><a name="l00650"></a><span class="lineno">  650</span>&#160;  <span class="keyword">const</span> uint32_t reserved;                                        </div><div class="line"><a name="l00651"></a><span class="lineno">  651</span>&#160;} <a class="code" href="structUSBD__Init__TypeDef.htm">USBD_Init_TypeDef</a>;</div><div class="line"><a name="l00652"></a><span class="lineno">  652</span>&#160;</div><div class="line"><a name="l00657"></a><span class="lineno"><a class="line" href="structUSBD__Callbacks__TypeDef.htm#a93a3dcf2bbef9f22b35f37df969b6ac7">  657</a></span>&#160;<span class="keyword">typedef</span> <span class="keyword">struct </span><a class="code" href="structUSBD__Callbacks__TypeDef.htm">USBD_Callbacks_TypeDef</a> {</div><div class="line"><a name="l00658"></a><span class="lineno">  658</span>&#160;  <span class="keyword">const</span> <a class="code" href="group__USB__DEVICE.htm#ga34f1b34e168438a4d2b475bef5103820">USBD_UsbResetCb_TypeDef</a> <a class="code" href="structUSBD__Callbacks__TypeDef.htm#a93a3dcf2bbef9f22b35f37df969b6ac7">usbReset</a>;                         </div><div class="line"><a name="l00660"></a><span class="lineno"><a class="line" href="structUSBD__Callbacks__TypeDef.htm#a4735f0df935af594ea2f331581211206">  660</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__USB__DEVICE.htm#ga437ac57b8fb58de07cf10ba94740b54a">USBD_DeviceStateChangeCb_TypeDef</a> <a class="code" href="structUSBD__Callbacks__TypeDef.htm#af4bb516d0199344f9a7ca21c20b43f8f">usbStateChange</a>;          </div><div class="line"><a name="l00661"></a><span class="lineno"><a class="line" href="structUSBD__Callbacks__TypeDef.htm#a41cdc1ee710af186504583727ac64ea9">  661</a></span>&#160;  <span class="keyword">const</span> <a class="code" href="group__USB__DEVICE.htm#gaf94f2cac2cddd3cc081888cc0d98a3e5">USBD_SetupCmdCb_TypeDef</a> <a class="code" href="structUSBD__Callbacks__TypeDef.htm#a4735f0df935af594ea2f331581211206">setupCmd</a>;                         </div><div class="line"><a name="l00662"></a><span class="lineno">  662</span>&#160;  <span class="keyword">const</span> <a class="code" href="group__USB__DEVICE.htm#ga8bb00f127c19df8b5b2ac421ae109082">USBD_IsSelfPoweredCb_TypeDef</a> <a class="code" href="structUSBD__Callbacks__TypeDef.htm#a41cdc1ee710af186504583727ac64ea9">isSelfPowered</a>;               </div><div class="line"><a name="l00665"></a><span class="lineno">  665</span>&#160;  <span class="keyword">const</span> <a class="code" href="group__USB__DEVICE.htm#ga6ed47bd813327a60229b6b9e90a331c0">USBD_SofIntCb_TypeDef</a> <a class="code" href="structUSBD__Callbacks__TypeDef.htm#a5506e8d86a3a7f08361a883efbddc1b5">sofInt</a>;                             </div><div class="line"><a name="l00667"></a><span class="lineno">  667</span>&#160;} <a class="code" href="group__USB__DEVICE.htm#gaa981b243246dbd611a4ba8bdd042424a">USBD_Callbacks_TypeDef</a>;</div><div class="line"><a name="l00668"></a><span class="lineno">  668</span>&#160;</div><div class="line"><a name="l00669"></a><span class="lineno">  669</span>&#160;<span class="comment">/*** -------------------- DEVICE mode API -------------------------------- ***/</span></div><div class="line"><a name="l00670"></a><span class="lineno">  670</span>&#160;</div><div class="line"><a name="l00671"></a><span class="lineno">  671</span>&#160;<span class="keywordtype">void</span>                <a class="code" href="group__USB__DEVICE.htm#ga325117af9b3a9ad1df068cf3b19dc1ba">USBD_AbortAllTransfers</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00672"></a><span class="lineno">  672</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#ga83f32dfa4f6a5d010e413967850c52b2">USBD_AbortTransfer</a>(<span class="keywordtype">int</span> epAddr);</div><div class="line"><a name="l00673"></a><span class="lineno">  673</span>&#160;<span class="keywordtype">void</span>                <a class="code" href="group__USB__DEVICE.htm#ga71b9264662d74666e4b058984e3346e5">USBD_Connect</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00674"></a><span class="lineno">  674</span>&#160;<span class="keywordtype">void</span>                <a class="code" href="group__USB__DEVICE.htm#ga2d952f8cf9bde552cfd5559ae47e70fc">USBD_Disconnect</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00675"></a><span class="lineno">  675</span>&#160;<span class="keywordtype">bool</span>                <a class="code" href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f">USBD_EpIsBusy</a>(<span class="keywordtype">int</span> epAddr);</div><div class="line"><a name="l00676"></a><span class="lineno">  676</span>&#160;<a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d">USBD_State_TypeDef</a>  <a class="code" href="group__USB__DEVICE.htm#gab4e55bb0aacaa90aab28a79e9b131b0f">USBD_GetUsbState</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00677"></a><span class="lineno">  677</span>&#160;<span class="keyword">const</span> <span class="keywordtype">char</span> *        <a class="code" href="group__USB__DEVICE.htm#ga1796a832b3ff75580451818ae2e64000">USBD_GetUsbStateName</a>(<a class="code" href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d">USBD_State_TypeDef</a> state);</div><div class="line"><a name="l00678"></a><span class="lineno">  678</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#ga0e5f5bd847e7cc1c4c384bb6b7f0ce77">USBD_Init</a>(<span class="keyword">const</span> <a class="code" href="structUSBD__Init__TypeDef.htm">USBD_Init_TypeDef</a> *p);</div><div class="line"><a name="l00679"></a><span class="lineno">  679</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#ga9e0a1cf705301d9e035feff27ea41cda">USBD_Read</a>(<span class="keywordtype">int</span> epAddr, <span class="keywordtype">void</span> *data, <span class="keywordtype">int</span> byteCount, <a class="code" href="group__USB__COMMON.htm#ga2fa15407a4ef650bbd9f69dbddad6977">USB_XferCompleteCb_TypeDef</a> callback);</div><div class="line"><a name="l00680"></a><span class="lineno">  680</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#ga9fb12718f509c578656e4fc08bc40f69">USBD_RemoteWakeup</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00681"></a><span class="lineno">  681</span>&#160;<span class="keywordtype">bool</span>                <a class="code" href="group__USB__DEVICE.htm#ga958a83c23eaa9fd51672808ac7c3fa65">USBD_SafeToEnterEM2</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00682"></a><span class="lineno">  682</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#ga9bf435e62169bfb3ee0a43ef0e9d009d">USBD_StallEp</a>(<span class="keywordtype">int</span> epAddr);</div><div class="line"><a name="l00683"></a><span class="lineno">  683</span>&#160;<span class="keywordtype">void</span>                <a class="code" href="group__USB__DEVICE.htm#gae26fedf61e90eb1e50ae5d24cd65d0b8">USBD_Stop</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00684"></a><span class="lineno">  684</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#gacb0ed1c21fd4aecfe96060ea87a617a8">USBD_UnStallEp</a>(<span class="keywordtype">int</span> epAddr);</div><div class="line"><a name="l00685"></a><span class="lineno">  685</span>&#160;<span class="keywordtype">int</span>                 <a class="code" href="group__USB__DEVICE.htm#ga656c8d2935af97156bc0babdc43c32ee">USBD_Write</a>(<span class="keywordtype">int</span> epAddr, <span class="keywordtype">void</span> *data, <span class="keywordtype">int</span> byteCount, <a class="code" href="group__USB__COMMON.htm#ga2fa15407a4ef650bbd9f69dbddad6977">USB_XferCompleteCb_TypeDef</a> callback);</div><div class="line"><a name="l00686"></a><span class="lineno">  686</span>&#160;</div><div class="line"><a name="l00687"></a><span class="lineno">  687</span>&#160;<span class="comment">/*** -------------------- UART Access -------------------------------- ***/</span></div><div class="line"><a name="l00688"></a><span class="lineno">  688</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__USB__DEVICE.htm#ga0e896f37e57c345c199d6e955b946c15">usbSuspendDsr</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00689"></a><span class="lineno">  689</span>&#160;</div><div class="line"><a name="l00692"></a><span class="lineno">  692</span>&#160;<span class="keywordtype">void</span> <a class="code" href="em__usb_8h.htm#ad49474dc47128a70257cebad8e99a5eb">usbTxData</a> (<span class="keywordtype">void</span>);</div><div class="line"><a name="l00693"></a><span class="lineno">  693</span>&#160;<span class="keywordtype">void</span> <a class="code" href="em__usb_8h.htm#a13e133a619141c4be22d126832c963d6">usbForceTxData</a> (uint8_t *data, uint8_t length);</div><div class="line"><a name="l00694"></a><span class="lineno">  694</span>&#160;<span class="keywordtype">void</span> <a class="code" href="em__usb_8h.htm#a7067718f05f63bf2f5e97ab49267558f">halInternalUart3RxIsr</a>(uint8_t *rxData, uint8_t length, <span class="keywordtype">bool</span> *pauseRx);</div><div class="line"><a name="l00695"></a><span class="lineno">  695</span>&#160;</div><div class="line"><a name="l00696"></a><span class="lineno">  696</span>&#160;<span class="preprocessor">#endif </span><span class="comment">/* __EM_USB_H */</span><span class="preprocessor"></span></div><div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a69c65b08dff316759c941351aa70a905"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a69c65b08dff316759c941351aa70a905">USB_STATUS_TIMEOUT</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00336">em_usb.h:336</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga656c8d2935af97156bc0babdc43c32ee"><div class="ttname"><a href="group__USB__DEVICE.htm#ga656c8d2935af97156bc0babdc43c32ee">USBD_Write</a></div><div class="ttdeci">int USBD_Write(int epAddr, void *data, int byteCount, USB_XferCompleteCb_TypeDef callback)</div><div class="ttdoc">Start a write (IN) transfer on an endpoint. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00509">em_usbd.c:509</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a14ada995fbc846cdd25a47bb84104b3d"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a14ada995fbc846cdd25a47bb84104b3d">USB_STATUS_EP_NAK</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00332">em_usb.h:332</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da978c707d313eb49b70bc62dfae304048"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da978c707d313eb49b70bc62dfae304048">USBD_STATE_DEFAULT</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00356">em_usb.h:356</a></div></div>
<div class="ttc" id="structUSBD__Callbacks__TypeDef_htm_a5506e8d86a3a7f08361a883efbddc1b5"><div class="ttname"><a href="structUSBD__Callbacks__TypeDef.htm#a5506e8d86a3a7f08361a883efbddc1b5">USBD_Callbacks_TypeDef::sofInt</a></div><div class="ttdeci">const USBD_SofIntCb_TypeDef sofInt</div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00664">em_usb.h:664</a></div></div>
<div class="ttc" id="em__usb_8h_htm_a13e133a619141c4be22d126832c963d6"><div class="ttname"><a href="em__usb_8h.htm#a13e133a619141c4be22d126832c963d6">usbForceTxData</a></div><div class="ttdeci">void usbForceTxData(uint8_t *data, uint8_t length)</div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da74e1d49afc6b25e202cc9e42f595f4ed">USBD_STATE_SUSPENDED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00359">em_usb.h:359</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7fc3604700f290c08102ab7a60dbeac2">USB_STATUS_OK</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00324">em_usb.h:324</a></div></div>
<div class="ttc" id="structUSBD__Callbacks__TypeDef_htm_a93a3dcf2bbef9f22b35f37df969b6ac7"><div class="ttname"><a href="structUSBD__Callbacks__TypeDef.htm#a93a3dcf2bbef9f22b35f37df969b6ac7">USBD_Callbacks_TypeDef::usbReset</a></div><div class="ttdeci">const USBD_UsbResetCb_TypeDef usbReset</div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00657">em_usb.h:657</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1ae32e2e8da1dce5b54ea6542adabec3a4"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1ae32e2e8da1dce5b54ea6542adabec3a4">USB_STATUS_REQ_UNHANDLED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00327">em_usb.h:327</a></div></div>
<div class="ttc" id="structUSBD__Callbacks__TypeDef_htm"><div class="ttname"><a href="structUSBD__Callbacks__TypeDef.htm">USBD_Callbacks_TypeDef</a></div><div class="ttdoc">USB Device stack callback structure. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00656">em_usb.h:656</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_ga2fa15407a4ef650bbd9f69dbddad6977"><div class="ttname"><a href="group__USB__COMMON.htm#ga2fa15407a4ef650bbd9f69dbddad6977">USB_XferCompleteCb_TypeDef</a></div><div class="ttdeci">int(* USB_XferCompleteCb_TypeDef)(USB_Status_TypeDef status, uint32_t xferred, uint32_t remaining)</div><div class="ttdoc">USB transfer callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00526">em_usb.h:526</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1afa326e98a111316089803b32218fa176"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1afa326e98a111316089803b32218fa176">USB_STATUS_EP_BUSY</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00326">em_usb.h:326</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga8bb00f127c19df8b5b2ac421ae109082"><div class="ttname"><a href="group__USB__DEVICE.htm#ga8bb00f127c19df8b5b2ac421ae109082">USBD_IsSelfPoweredCb_TypeDef</a></div><div class="ttdeci">bool(* USBD_IsSelfPoweredCb_TypeDef)(void)</div><div class="ttdoc">USB power mode callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00604">em_usb.h:604</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gae26fedf61e90eb1e50ae5d24cd65d0b8"><div class="ttname"><a href="group__USB__DEVICE.htm#gae26fedf61e90eb1e50ae5d24cd65d0b8">USBD_Stop</a></div><div class="ttdeci">void USBD_Stop(void)</div><div class="ttdoc">Stop USB device stack operation. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00305">em_usbd.c:305</a></div></div>
<div class="ttc" id="group__iar_htm_gabd10f17c7b1949b576d219806aef2d43"><div class="ttname"><a href="group__iar.htm#gabd10f17c7b1949b576d219806aef2d43">__attribute__</a></div><div class="ttdeci">#define __attribute__(...)</div><div class="ttdoc">Define attribute to nothing since it isn&amp;#39;t handled by IAR. </div><div class="ttdef"><b>Definition:</b> <a href="iar_8h_source.htm#l00211">iar.h:211</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga9fb12718f509c578656e4fc08bc40f69"><div class="ttname"><a href="group__USB__DEVICE.htm#ga9fb12718f509c578656e4fc08bc40f69">USBD_RemoteWakeup</a></div><div class="ttdeci">int USBD_RemoteWakeup(void)</div><div class="ttdoc">Perform a remote wakeup signalling sequence. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00720">em_usbd.c:720</a></div></div>
<div class="ttc" id="structUSB__StringDescriptor__TypeDef_htm"><div class="ttname"><a href="structUSB__StringDescriptor__TypeDef.htm">USB_StringDescriptor_TypeDef</a></div><div class="ttdoc">USB String Descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00496">em_usb.h:496</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da8abe2fca377f950a2a9c95316f5246be"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da8abe2fca377f950a2a9c95316f5246be">USBD_STATE_ADDRESSED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00357">em_usb.h:357</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gafef1ec052374683fb7f26c5d27645e2c"><div class="ttname"><a href="group__USB__COMMON.htm#gafef1ec052374683fb7f26c5d27645e2c">USBTIMER_DelayUs</a></div><div class="ttdeci">void USBTIMER_DelayUs(uint32_t usec)</div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1ac04acd309cb435eb12ef691c2d791b4b"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1ac04acd309cb435eb12ef691c2d791b4b">USB_STATUS_DEVICE_SUSPENDED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00334">em_usb.h:334</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a405b76e741623252f954e353aceaf11b"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a405b76e741623252f954e353aceaf11b">USB_STATUS_DEVICE_RESET</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00335">em_usb.h:335</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga325117af9b3a9ad1df068cf3b19dc1ba"><div class="ttname"><a href="group__USB__DEVICE.htm#ga325117af9b3a9ad1df068cf3b19dc1ba">USBD_AbortAllTransfers</a></div><div class="ttdeci">void USBD_AbortAllTransfers(void)</div><div class="ttdoc">Abort all pending transfers. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00053">em_usbd.c:53</a></div></div>
<div class="ttc" id="structUSB__Setup__TypeDef_htm"><div class="ttname"><a href="structUSB__Setup__TypeDef.htm">USB_Setup_TypeDef</a></div><div class="ttdoc">USB Setup request package. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00370">em_usb.h:370</a></div></div>
<div class="ttc" id="structUSBD__Callbacks__TypeDef_htm_af4bb516d0199344f9a7ca21c20b43f8f"><div class="ttname"><a href="structUSBD__Callbacks__TypeDef.htm#af4bb516d0199344f9a7ca21c20b43f8f">USBD_Callbacks_TypeDef::usbStateChange</a></div><div class="ttdeci">const USBD_DeviceStateChangeCb_TypeDef usbStateChange</div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00659">em_usb.h:659</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga0e5f5bd847e7cc1c4c384bb6b7f0ce77"><div class="ttname"><a href="group__USB__DEVICE.htm#ga0e5f5bd847e7cc1c4c384bb6b7f0ce77">USBD_Init</a></div><div class="ttdeci">int USBD_Init(const USBD_Init_TypeDef *p)</div><div class="ttdoc">Initializes USB device hardware and internal protocol stack data structures, then connects the data-l...</div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00328">em_usbd.c:328</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da35ca8b56bdc46ce0dd7c39400796ba7c">USBD_STATE_NONE</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00353">em_usb.h:353</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a7e1a5aed008099af75161c3a45de3e58"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a7e1a5aed008099af75161c3a45de3e58">USB_STATUS_DEVICE_UNCONFIGURED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00333">em_usb.h:333</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1af19192add0ff1bc76fff46fef7295f27"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1af19192add0ff1bc76fff46fef7295f27">USB_STATUS_DEVICE_REMOVED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00337">em_usb.h:337</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gac2a406f16d989b04c4fc5b37d5c10b45"><div class="ttname"><a href="group__USB__COMMON.htm#gac2a406f16d989b04c4fc5b37d5c10b45">USBTIMER_Start</a></div><div class="ttdeci">void USBTIMER_Start(uint32_t id, uint32_t timeout, USBTIMER_Callback_TypeDef callback)</div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1aa9c73dd98ee624ee7d4b8f7c2ec7206b"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aa9c73dd98ee624ee7d4b8f7c2ec7206b">USB_STATUS_DEVICE_MALFUNCTION</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00339">em_usb.h:339</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gab73c922427cf0d509788a8063451703f"><div class="ttname"><a href="group__USB__COMMON.htm#gab73c922427cf0d509788a8063451703f">USBTIMER_Stop</a></div><div class="ttdeci">void USBTIMER_Stop(uint32_t id)</div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gaf94f2cac2cddd3cc081888cc0d98a3e5"><div class="ttname"><a href="group__USB__DEVICE.htm#gaf94f2cac2cddd3cc081888cc0d98a3e5">USBD_SetupCmdCb_TypeDef</a></div><div class="ttdeci">int(* USBD_SetupCmdCb_TypeDef)(const USB_Setup_TypeDef *setup)</div><div class="ttdoc">USB setup request callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00624">em_usb.h:624</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga9bf435e62169bfb3ee0a43ef0e9d009d"><div class="ttname"><a href="group__USB__DEVICE.htm#ga9bf435e62169bfb3ee0a43ef0e9d009d">USBD_StallEp</a></div><div class="ttdeci">int USBD_StallEp(int epAddr)</div><div class="ttdoc">Set an endpoint in the stalled (halted) state. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00224">em_usbd.c:224</a></div></div>
<div class="ttc" id="structUSBD__Init__TypeDef_htm"><div class="ttname"><a href="structUSBD__Init__TypeDef.htm">USBD_Init_TypeDef</a></div><div class="ttdoc">USB Device stack initialization structure. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00635">em_usb.h:635</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a48b7d77349a7cad390753b58e02adf56"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a48b7d77349a7cad390753b58e02adf56">USB_STATUS_EP_STALLED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00329">em_usb.h:329</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga83f32dfa4f6a5d010e413967850c52b2"><div class="ttname"><a href="group__USB__DEVICE.htm#ga83f32dfa4f6a5d010e413967850c52b2">USBD_AbortTransfer</a></div><div class="ttdeci">int USBD_AbortTransfer(int epAddr)</div><div class="ttdoc">Abort a pending transfer on a specific endpoint. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00067">em_usbd.c:67</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga2d952f8cf9bde552cfd5559ae47e70fc"><div class="ttname"><a href="group__USB__DEVICE.htm#ga2d952f8cf9bde552cfd5559ae47e70fc">USBD_Disconnect</a></div><div class="ttdeci">void USBD_Disconnect(void)</div><div class="ttdoc">Stop USB device operation. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00130">em_usbd.c:130</a></div></div>
<div class="ttc" id="em__usb_8h_htm_ad49474dc47128a70257cebad8e99a5eb"><div class="ttname"><a href="em__usb_8h.htm#ad49474dc47128a70257cebad8e99a5eb">usbTxData</a></div><div class="ttdeci">void usbTxData(void)</div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gab4e55bb0aacaa90aab28a79e9b131b0f"><div class="ttname"><a href="group__USB__DEVICE.htm#gab4e55bb0aacaa90aab28a79e9b131b0f">USBD_GetUsbState</a></div><div class="ttdeci">USBD_State_TypeDef USBD_GetUsbState(void)</div><div class="ttdoc">Get current USB device state. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00165">em_usbd.c:165</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga437ac57b8fb58de07cf10ba94740b54a"><div class="ttname"><a href="group__USB__DEVICE.htm#ga437ac57b8fb58de07cf10ba94740b54a">USBD_DeviceStateChangeCb_TypeDef</a></div><div class="ttdeci">void(* USBD_DeviceStateChangeCb_TypeDef)(USBD_State_TypeDef oldState, USBD_State_TypeDef newState)</div><div class="ttdoc">USB State change callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00590">em_usb.h:590</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_ga102c5dc66bd90f5209e00ed6f0a6ff4a"><div class="ttname"><a href="group__USB__COMMON.htm#ga102c5dc66bd90f5209e00ed6f0a6ff4a">USBTIMER_Callback_TypeDef</a></div><div class="ttdeci">void(* USBTIMER_Callback_TypeDef)(void)</div><div class="ttdoc">USBTIMER callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00536">em_usb.h:536</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gabb1c11cad365c7c3b99a3e7826035951"><div class="ttname"><a href="group__USB__COMMON.htm#gabb1c11cad365c7c3b99a3e7826035951">USBTIMER_DelayMs</a></div><div class="ttdeci">void USBTIMER_DelayMs(uint32_t msec)</div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6dad588a80fcef0bcb009e0822908b36d29">USBD_STATE_LASTMARKER</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00360">em_usb.h:360</a></div></div>
<div class="ttc" id="structUSBD__Callbacks__TypeDef_htm_a41cdc1ee710af186504583727ac64ea9"><div class="ttname"><a href="structUSBD__Callbacks__TypeDef.htm#a41cdc1ee710af186504583727ac64ea9">USBD_Callbacks_TypeDef::isSelfPowered</a></div><div class="ttdeci">const USBD_IsSelfPoweredCb_TypeDef isSelfPowered</div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00661">em_usb.h:661</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga9e0a1cf705301d9e035feff27ea41cda"><div class="ttname"><a href="group__USB__DEVICE.htm#ga9e0a1cf705301d9e035feff27ea41cda">USBD_Read</a></div><div class="ttdeci">int USBD_Read(int epAddr, void *data, int byteCount, USB_XferCompleteCb_TypeDef callback)</div><div class="ttdoc">Start a read (OUT) transfer on an endpoint. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00618">em_usbd.c:618</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da44c1920b09ea1062ea4d7ac31a846509">USBD_STATE_CONFIGURED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00358">em_usb.h:358</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga437a2e7bf70740fc715ac9a5c7310a6d"><div class="ttname"><a href="group__USB__DEVICE.htm#ga437a2e7bf70740fc715ac9a5c7310a6d">USBD_State_TypeDef</a></div><div class="ttdeci">USBD_State_TypeDef</div><div class="ttdoc">USB device state enumerator. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00352">em_usb.h:352</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1aab9974d621b469d47637c07d1ee0c29f"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aab9974d621b469d47637c07d1ee0c29f">USB_STATUS_HC_BUSY</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00338">em_usb.h:338</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga0e896f37e57c345c199d6e955b946c15"><div class="ttname"><a href="group__USB__DEVICE.htm#ga0e896f37e57c345c199d6e955b946c15">usbSuspendDsr</a></div><div class="ttdeci">void usbSuspendDsr(void)</div><div class="ttdoc">USB suspend delayed service routine. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00692">em_usbd.c:692</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1aaf5744aa348775f860ff2ff535c67ee7"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aaf5744aa348775f860ff2ff535c67ee7">USB_STATUS_EP_ABORTED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00330">em_usb.h:330</a></div></div>
<div class="ttc" id="structUSB__ConfigurationDescriptor__TypeDef_htm"><div class="ttname"><a href="structUSB__ConfigurationDescriptor__TypeDef.htm">USB_ConfigurationDescriptor_TypeDef</a></div><div class="ttdoc">USB Configuration Descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00418">em_usb.h:418</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_ga21c87b800d87fd731173dd4f48f23c28"><div class="ttname"><a href="group__USB__COMMON.htm#ga21c87b800d87fd731173dd4f48f23c28">USBTIMER_Init</a></div><div class="ttdeci">void USBTIMER_Init(void)</div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga958a83c23eaa9fd51672808ac7c3fa65"><div class="ttname"><a href="group__USB__DEVICE.htm#ga958a83c23eaa9fd51672808ac7c3fa65">USBD_SafeToEnterEM2</a></div><div class="ttdeci">bool USBD_SafeToEnterEM2(void)</div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga1796a832b3ff75580451818ae2e64000"><div class="ttname"><a href="group__USB__DEVICE.htm#ga1796a832b3ff75580451818ae2e64000">USBD_GetUsbStateName</a></div><div class="ttdeci">const char * USBD_GetUsbStateName(USBD_State_TypeDef state)</div><div class="ttdoc">Get a string naming a device USB state. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00180">em_usbd.c:180</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga34f1b34e168438a4d2b475bef5103820"><div class="ttname"><a href="group__USB__DEVICE.htm#ga34f1b34e168438a4d2b475bef5103820">USBD_UsbResetCb_TypeDef</a></div><div class="ttdeci">void(* USBD_UsbResetCb_TypeDef)(void)</div><div class="ttdoc">USB Reset callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00563">em_usb.h:563</a></div></div>
<div class="ttc" id="structUSB__DeviceDescriptor__TypeDef_htm"><div class="ttname"><a href="structUSB__DeviceDescriptor__TypeDef.htm">USB_DeviceDescriptor_TypeDef</a></div><div class="ttdoc">USB Device Descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00396">em_usb.h:396</a></div></div>
<div class="ttc" id="em__usb_8h_htm_a7067718f05f63bf2f5e97ab49267558f"><div class="ttname"><a href="em__usb_8h.htm#a7067718f05f63bf2f5e97ab49267558f">halInternalUart3RxIsr</a></div><div class="ttdeci">void halInternalUart3RxIsr(uint8_t *rxData, uint8_t length, bool *pauseRx)</div></div>
<div class="ttc" id="structUSBD__Callbacks__TypeDef_htm_a4735f0df935af594ea2f331581211206"><div class="ttname"><a href="structUSBD__Callbacks__TypeDef.htm#a4735f0df935af594ea2f331581211206">USBD_Callbacks_TypeDef::setupCmd</a></div><div class="ttdeci">const USBD_SetupCmdCb_TypeDef setupCmd</div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00660">em_usb.h:660</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga9eb41fa7508126bea30d672b777e250f"><div class="ttname"><a href="group__USB__DEVICE.htm#ga9eb41fa7508126bea30d672b777e250f">USBD_EpIsBusy</a></div><div class="ttdeci">bool USBD_EpIsBusy(int epAddr)</div><div class="ttdoc">Check if an endpoint is busy doing a transfer. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00199">em_usbd.c:199</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga71b9264662d74666e4b058984e3346e5"><div class="ttname"><a href="group__USB__DEVICE.htm#ga71b9264662d74666e4b058984e3346e5">USBD_Connect</a></div><div class="ttdeci">void USBD_Connect(void)</div><div class="ttdoc">Start USB device operation. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00115">em_usbd.c:115</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da01e32e620c7692ea767d99bb4120940b"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da01e32e620c7692ea767d99bb4120940b">USBD_STATE_ATTACHED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00354">em_usb.h:354</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gaa981b243246dbd611a4ba8bdd042424a"><div class="ttname"><a href="group__USB__DEVICE.htm#gaa981b243246dbd611a4ba8bdd042424a">USBD_Callbacks_TypeDef</a></div><div class="ttdeci">struct USBD_Callbacks_TypeDef USBD_Callbacks_TypeDef</div><div class="ttdoc">USB Device stack callback structure. </div></div>
<div class="ttc" id="structUSB__InterfaceDescriptor__TypeDef_htm"><div class="ttname"><a href="structUSB__InterfaceDescriptor__TypeDef.htm">USB_InterfaceDescriptor_TypeDef</a></div><div class="ttdoc">USB Interface Descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00445">em_usb.h:445</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a1792144148bac0a51ebc387e74e85257">USB_STATUS_ILLEGAL</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00328">em_usb.h:328</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gga437a2e7bf70740fc715ac9a5c7310a6da47b9228ad86b300416ed28d2c2b7e5d3"><div class="ttname"><a href="group__USB__DEVICE.htm#gga437a2e7bf70740fc715ac9a5c7310a6da47b9228ad86b300416ed28d2c2b7e5d3">USBD_STATE_POWERED</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00355">em_usb.h:355</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1a551e7a6fbdf7e891b8232818179fa229"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1a551e7a6fbdf7e891b8232818179fa229">USB_STATUS_REQ_ERR</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00325">em_usb.h:325</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_ga6ed47bd813327a60229b6b9e90a331c0"><div class="ttname"><a href="group__USB__DEVICE.htm#ga6ed47bd813327a60229b6b9e90a331c0">USBD_SofIntCb_TypeDef</a></div><div class="ttdeci">void(* USBD_SofIntCb_TypeDef)(uint16_t sofNr)</div><div class="ttdoc">USB Start Of Frame (SOF) interrupt callback function. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00575">em_usb.h:575</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_ga889b575b566a663621c33eebf46272c1"><div class="ttname"><a href="group__USB__COMMON.htm#ga889b575b566a663621c33eebf46272c1">USB_Status_TypeDef</a></div><div class="ttdeci">USB_Status_TypeDef</div><div class="ttdoc">USB transfer status enumerator. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00322">em_usb.h:322</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1abb08e1a5c37f087b1f272fd764be40d2"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1abb08e1a5c37f087b1f272fd764be40d2">USB_STATUS_EP_ERROR</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00331">em_usb.h:331</a></div></div>
<div class="ttc" id="structUSB__EndpointDescriptor__TypeDef_htm"><div class="ttname"><a href="structUSB__EndpointDescriptor__TypeDef.htm">USB_EndpointDescriptor_TypeDef</a></div><div class="ttdoc">USB Endpoint Descriptor. </div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00484">em_usb.h:484</a></div></div>
<div class="ttc" id="group__USB__DEVICE_htm_gacb0ed1c21fd4aecfe96060ea87a617a8"><div class="ttname"><a href="group__USB__DEVICE.htm#gacb0ed1c21fd4aecfe96060ea87a617a8">USBD_UnStallEp</a></div><div class="ttdeci">int USBD_UnStallEp(int epAddr)</div><div class="ttdoc">Reset stall state on a stalled (halted) endpoint. </div><div class="ttdef"><b>Definition:</b> <a href="em__usbd_8c_source.htm#l00266">em_usbd.c:266</a></div></div>
<div class="ttc" id="group__USB__COMMON_htm_gga889b575b566a663621c33eebf46272c1aa84fb30ea08f226b475c1bb137483023"><div class="ttname"><a href="group__USB__COMMON.htm#gga889b575b566a663621c33eebf46272c1aa84fb30ea08f226b475c1bb137483023">USB_STATUS_PORT_OVERCURRENT</a></div><div class="ttdef"><b>Definition:</b> <a href="em__usb_8h_source.htm#l00340">em_usb.h:340</a></div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the EM35x SoC Platform. EmberZNet 6.1.0.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
