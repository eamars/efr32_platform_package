<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 6.0.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div><!-- Generated by Doxygen 1.8.11 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('fragment-host_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">fragment-host.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="fragment-host_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;</div><div class="line"><a name="l00059"></a><span class="lineno">   59</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__fragment.htm#gab9de723ae06ecacaa72b0d0cbae54fee">ezspFragmentInit</a>(uint16_t receiveBufferLength, uint8_t *receiveBuffer);</div><div class="line"><a name="l00060"></a><span class="lineno">   60</span>&#160;</div><div class="line"><a name="l00095"></a><span class="lineno">   95</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__fragment.htm#ga3b49c042b088eaea9863e44ee8e63f73">ezspFragmentSendUnicast</a>(<a class="code" href="group__ember__types.htm#gab77dd07ca7af23a832974d3cc20c94f3">EmberOutgoingMessageType</a> type,</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;                                    uint16_t indexOrDestination,</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;                                    <a class="code" href="structEmberApsFrame.htm">EmberApsFrame</a> *apsFrame,</div><div class="line"><a name="l00098"></a><span class="lineno">   98</span>&#160;                                    uint8_t maxFragmentSize,</div><div class="line"><a name="l00099"></a><span class="lineno">   99</span>&#160;                                    uint16_t messageLength,</div><div class="line"><a name="l00100"></a><span class="lineno">  100</span>&#160;                                    uint8_t *messageContents);</div><div class="line"><a name="l00101"></a><span class="lineno">  101</span>&#160;</div><div class="line"><a name="l00114"></a><span class="lineno">  114</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__fragment.htm#ga3adf91095f1f9f83cc2c1135457bce5f">ezspFragmentSourceRouteHandler</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00115"></a><span class="lineno">  115</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__fragment.htm#ga309fe138308719f17d5a79a773996bd6">ezspFragmentMessageSent</a>(<a class="code" href="structEmberApsFrame.htm">EmberApsFrame</a> *apsFrame, <a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00140"></a><span class="lineno">  140</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__fragment.htm#ga1e2b6e3d9deb29daa915cb4f1190f25c">ezspFragmentMessageSentHandler</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status);</div><div class="line"><a name="l00141"></a><span class="lineno">  141</span>&#160;</div><div class="line"><a name="l00173"></a><span class="lineno">  173</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__fragment.htm#ga859f61dd06530e79b83ed8ec57309d92">ezspFragmentIncomingMessage</a>(<a class="code" href="structEmberApsFrame.htm">EmberApsFrame</a> *apsFrame,</div><div class="line"><a name="l00174"></a><span class="lineno">  174</span>&#160;                                 <a class="code" href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a> sender,</div><div class="line"><a name="l00175"></a><span class="lineno">  175</span>&#160;                                 uint16_t *messageLength,</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;                                 uint8_t **messageContents);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__fragment.htm#gadabc497ce059720314e4b878475a2009">ezspFragmentTick</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="ttc" id="group__fragment_htm_ga1e2b6e3d9deb29daa915cb4f1190f25c"><div class="ttname"><a href="group__fragment.htm#ga1e2b6e3d9deb29daa915cb4f1190f25c">ezspFragmentMessageSentHandler</a></div><div class="ttdeci">void ezspFragmentMessageSentHandler(EmberStatus status)</div><div class="ttdoc">The fragmentation code calls this application-defined handler when it finishes sending a long message...</div></div>
<div class="ttc" id="group__fragment_htm_ga309fe138308719f17d5a79a773996bd6"><div class="ttname"><a href="group__fragment.htm#ga309fe138308719f17d5a79a773996bd6">ezspFragmentMessageSent</a></div><div class="ttdeci">bool ezspFragmentMessageSent(EmberApsFrame *apsFrame, EmberStatus status)</div><div class="ttdoc">The application must call this function at the start of its ezspMessageSentHandler(). If it returns true, the fragmentation code has handled the event and the application must not process it further. </div></div>
<div class="ttc" id="group__fragment_htm_gadabc497ce059720314e4b878475a2009"><div class="ttname"><a href="group__fragment.htm#gadabc497ce059720314e4b878475a2009">ezspFragmentTick</a></div><div class="ttdeci">void ezspFragmentTick(void)</div><div class="ttdoc">Used by the fragmentation code to time incoming blocks. The application must call this function regul...</div></div>
<div class="ttc" id="group__fragment_htm_ga3adf91095f1f9f83cc2c1135457bce5f"><div class="ttname"><a href="group__fragment.htm#ga3adf91095f1f9f83cc2c1135457bce5f">ezspFragmentSourceRouteHandler</a></div><div class="ttdeci">EmberStatus ezspFragmentSourceRouteHandler(void)</div><div class="ttdoc">A callback invoked just before each block of the current long message is sent. If the message is to b...</div></div>
<div class="ttc" id="group__ember__types_htm_ga432acdaed32cc9f75e60d8610bab52ce"><div class="ttname"><a href="group__ember__types.htm#ga432acdaed32cc9f75e60d8610bab52ce">EmberNodeId</a></div><div class="ttdeci">uint16_t EmberNodeId</div><div class="ttdoc">16-bit ZigBee network address. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l00199">ember-types.h:199</a></div></div>
<div class="ttc" id="group__fragment_htm_gab9de723ae06ecacaa72b0d0cbae54fee"><div class="ttname"><a href="group__fragment.htm#gab9de723ae06ecacaa72b0d0cbae54fee">ezspFragmentInit</a></div><div class="ttdeci">void ezspFragmentInit(uint16_t receiveBufferLength, uint8_t *receiveBuffer)</div><div class="ttdoc">Initialize variables and buffers used for sending and receiving long messages. This functions reads t...</div></div>
<div class="ttc" id="structEmberApsFrame_htm"><div class="ttname"><a href="structEmberApsFrame.htm">EmberApsFrame</a></div><div class="ttdoc">An in-memory representation of a ZigBee APS frame of an incoming or outgoing message. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l01018">ember-types.h:1018</a></div></div>
<div class="ttc" id="group__ember__types_htm_gacff561a945530f3039d6715958418ab8"><div class="ttname"><a href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a></div><div class="ttdeci">uint8_t EmberStatus</div><div class="ttdoc">EmberReleaseTypeStruct Data that relates release type to the correct string. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l00175">ember-types.h:175</a></div></div>
<div class="ttc" id="group__ember__types_htm_gab77dd07ca7af23a832974d3cc20c94f3"><div class="ttname"><a href="group__ember__types.htm#gab77dd07ca7af23a832974d3cc20c94f3">EmberOutgoingMessageType</a></div><div class="ttdeci">EmberOutgoingMessageType</div><div class="ttdoc">Defines the possible outgoing message types. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l00642">ember-types.h:642</a></div></div>
<div class="ttc" id="group__fragment_htm_ga3b49c042b088eaea9863e44ee8e63f73"><div class="ttname"><a href="group__fragment.htm#ga3b49c042b088eaea9863e44ee8e63f73">ezspFragmentSendUnicast</a></div><div class="ttdeci">EmberStatus ezspFragmentSendUnicast(EmberOutgoingMessageType type, uint16_t indexOrDestination, EmberApsFrame *apsFrame, uint8_t maxFragmentSize, uint16_t messageLength, uint8_t *messageContents)</div><div class="ttdoc">Sends a long message by splitting it into blocks. Only one long message can be sent at a time...</div></div>
<div class="ttc" id="group__fragment_htm_ga859f61dd06530e79b83ed8ec57309d92"><div class="ttname"><a href="group__fragment.htm#ga859f61dd06530e79b83ed8ec57309d92">ezspFragmentIncomingMessage</a></div><div class="ttdeci">bool ezspFragmentIncomingMessage(EmberApsFrame *apsFrame, EmberNodeId sender, uint16_t *messageLength, uint8_t **messageContents)</div><div class="ttdoc">The application must call this function at the start of its ezspIncomingMessageHandler(). If it returns true, the fragmentation code has handled the message and the application must not process it further. When the final block of a long message is received, this function replaces the message with the reassembled long message and returns false so that the application processes it. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the EM35x SoC Platform. EmberZNet 6.0.0.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
