<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<meta http-equiv="X-UA-Compatible" content="IE=9"/>
<title>EmberZNet API Reference: For the EM35x SoC Platform</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="doxygen.css" rel="stylesheet" type="text/css" />
<link href="navtree.css" rel="stylesheet" type="text/css"/>
<script type="text/javascript" src="jquery.js"></script>
<script type="text/javascript" src="resize.js"></script>
<script type="text/javascript" src="navtree.js"></script>
<script type="text/javascript">
  $(document).ready(initResizable);
</script>
</head>
<body>
<div id="top"><!-- do not remove this div! -->
<div id="titlearea">
<table cellspacing="0" cellpadding="0">
 <tbody>
 <tr style="height: 56px;">
  <td><img src="SiliconLabsLogo_Black.jpg" style="padding: 10px;width:40%;height:40%;" /></td>
  <td style="padding-left: 0.5em;">
   <div id="projectname">EmberZNet API Reference: For the EM35x SoC Platform
   &#160;<span id="projectnumber">EmberZNet 6.0.0.0</span>
   </div>
  </td>
 </tr>
 </tbody>
</table>
</div><!-- Generated by Doxygen 1.8.11 -->
</div><!-- top -->
<div id="side-nav" class="ui-resizable side-nav-resizable">
  <div id="nav-tree">
    <div id="nav-tree-contents">
      <div id="nav-sync" class="sync"></div>
    </div>
  </div>
  <div id="splitbar" style="-moz-user-select:none;" 
       class="ui-resizable-handle">
  </div>
</div>
<script type="text/javascript">
$(document).ready(function(){initNavTree('zll-api_8h_source.htm','');});
</script>
<div id="doc-content">
<div class="header">
  <div class="headertitle">
<div class="title">zll-api.h</div>  </div>
</div><!--header-->
<div class="contents">
<a href="zll-api_8h.htm">Go to the documentation of this file.</a><div class="fragment"><div class="line"><a name="l00001"></a><span class="lineno">    1</span>&#160;<span class="comment">/*</span></div><div class="line"><a name="l00002"></a><span class="lineno">    2</span>&#160;<span class="comment"> * @file zll-api.h</span></div><div class="line"><a name="l00003"></a><span class="lineno">    3</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00004"></a><span class="lineno">    4</span>&#160;<span class="comment"> * @brief AI for sending and receiving ZigBee Light Link (ZLL) messages.</span></div><div class="line"><a name="l00005"></a><span class="lineno">    5</span>&#160;<span class="comment"> *</span></div><div class="line"><a name="l00006"></a><span class="lineno">    6</span>&#160;<span class="comment"> * &lt;!--Copyright 2010 by Ember Corporation. All rights reserved.         *80*--&gt;</span></div><div class="line"><a name="l00007"></a><span class="lineno">    7</span>&#160;<span class="comment"> */</span></div><div class="line"><a name="l00008"></a><span class="lineno">    8</span>&#160;</div><div class="line"><a name="l00033"></a><span class="lineno">   33</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__zll.htm#gae890f5d8f0754425d0fd4f208e729eef">emberZllFormNetwork</a>(<a class="code" href="structEmberZllNetwork.htm">EmberZllNetwork</a>* networkInfo,</div><div class="line"><a name="l00034"></a><span class="lineno">   34</span>&#160;                                int8_t radioTxPower);</div><div class="line"><a name="l00035"></a><span class="lineno">   35</span>&#160;</div><div class="line"><a name="l00052"></a><span class="lineno">   52</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__zll.htm#ga0bc61b9d557dbdd31322eb02f87081dd">emberZllJoinTarget</a>(<span class="keyword">const</span> <a class="code" href="structEmberZllNetwork.htm">EmberZllNetwork</a>* targetNetworkInfo);</div><div class="line"><a name="l00053"></a><span class="lineno">   53</span>&#160;</div><div class="line"><a name="l00066"></a><span class="lineno">   66</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__zll.htm#ga08d23d25544dbad5ad4b285a1dd474e8">emberZllSetInitialSecurityState</a>(<span class="keyword">const</span> <a class="code" href="structEmberKeyData.htm">EmberKeyData</a> *networkKey,</div><div class="line"><a name="l00067"></a><span class="lineno">   67</span>&#160;                                            <span class="keyword">const</span> <a class="code" href="structEmberZllInitialSecurityState.htm">EmberZllInitialSecurityState</a> *securityState);</div><div class="line"><a name="l00068"></a><span class="lineno">   68</span>&#160;</div><div class="line"><a name="l00080"></a><span class="lineno">   80</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__zll.htm#gabbbe392c97ff423bc211d4a018b8d7b5">emberZllStartScan</a>(uint32_t channelMask,</div><div class="line"><a name="l00081"></a><span class="lineno">   81</span>&#160;                              int8_t radioPowerForScan,</div><div class="line"><a name="l00082"></a><span class="lineno">   82</span>&#160;                              <a class="code" href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac">EmberNodeType</a> nodeType);</div><div class="line"><a name="l00083"></a><span class="lineno">   83</span>&#160;</div><div class="line"><a name="l00096"></a><span class="lineno">   96</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__zll.htm#ga4e0e0b77bf48e8f3c49e620433837def">emberZllSetRxOnWhenIdle</a>(uint16_t durationMs);</div><div class="line"><a name="l00097"></a><span class="lineno">   97</span>&#160;</div><div class="line"><a name="l00110"></a><span class="lineno">  110</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga85757b4b307b7e2e9b220f067a8715a0">emberZllNetworkFoundHandler</a>(<span class="keyword">const</span> <a class="code" href="structEmberZllNetwork.htm">EmberZllNetwork</a>* networkInfo,</div><div class="line"><a name="l00111"></a><span class="lineno">  111</span>&#160;                                 <span class="keyword">const</span> <a class="code" href="structEmberZllDeviceInfoRecord.htm">EmberZllDeviceInfoRecord</a>* deviceInfo);</div><div class="line"><a name="l00112"></a><span class="lineno">  112</span>&#160;</div><div class="line"><a name="l00121"></a><span class="lineno">  121</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga8a32a0408b13c5e7e058dd9e9d63b712">emberZllScanCompleteHandler</a>(<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> status);</div><div class="line"><a name="l00122"></a><span class="lineno">  122</span>&#160;</div><div class="line"><a name="l00130"></a><span class="lineno">  130</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga8e4d8b32dda6b8f896a69164f7e5f23f">emberZllAddressAssignmentHandler</a>(<span class="keyword">const</span> <a class="code" href="structEmberZllAddressAssignment.htm">EmberZllAddressAssignment</a>* addressInfo);</div><div class="line"><a name="l00131"></a><span class="lineno">  131</span>&#160;</div><div class="line"><a name="l00138"></a><span class="lineno">  138</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga3cbd754adb810d2e6d60adb121fa342b">emberZllTouchLinkTargetHandler</a>(<span class="keyword">const</span> <a class="code" href="structEmberZllNetwork.htm">EmberZllNetwork</a> *networkInfo);</div><div class="line"><a name="l00139"></a><span class="lineno">  139</span>&#160;</div><div class="line"><a name="l00150"></a><span class="lineno">  150</span>&#160;<span class="keywordtype">boolean</span> <a class="code" href="group__zll.htm#gac613798e523313428c05fa764b0815a1">emberZllSendNetworkResponseTestHandler</a>(uint8_t *cmdId,</div><div class="line"><a name="l00151"></a><span class="lineno">  151</span>&#160;                                               uint32_t *transactionId,</div><div class="line"><a name="l00152"></a><span class="lineno">  152</span>&#160;                                               <a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> *responseStatus);</div><div class="line"><a name="l00153"></a><span class="lineno">  153</span>&#160;</div><div class="line"><a name="l00164"></a><span class="lineno">  164</span>&#160;<span class="keywordtype">boolean</span> <a class="code" href="group__zll.htm#ga508e465141bba39737df039f9a15bd02">emberZllSendUnicastTestHandler</a>(uint8_t *targetEui64,</div><div class="line"><a name="l00165"></a><span class="lineno">  165</span>&#160;                                       uint8_t* buffer,</div><div class="line"><a name="l00166"></a><span class="lineno">  166</span>&#160;                                       uint8_t length);</div><div class="line"><a name="l00167"></a><span class="lineno">  167</span>&#160;</div><div class="line"><a name="l00171"></a><span class="lineno">  171</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#gae08595457d77d2050d35bfc8a8fdc56f">emberZllGetTokenStackZllData</a>(<a class="code" href="structEmberTokTypeStackZllData.htm">EmberTokTypeStackZllData</a> *token);</div><div class="line"><a name="l00172"></a><span class="lineno">  172</span>&#160;</div><div class="line"><a name="l00176"></a><span class="lineno">  176</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga485188c22ff8a4259ac70ca4b40ef31a">emberZllGetTokenStackZllSecurity</a>(<a class="code" href="structEmberTokTypeStackZllSecurity.htm">EmberTokTypeStackZllSecurity</a> *token);</div><div class="line"><a name="l00177"></a><span class="lineno">  177</span>&#160;</div><div class="line"><a name="l00181"></a><span class="lineno">  181</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#gabf0e7be763d8771dd67097bfcabac057">emberZllGetTokensStackZll</a>(<a class="code" href="structEmberTokTypeStackZllData.htm">EmberTokTypeStackZllData</a> *data,</div><div class="line"><a name="l00182"></a><span class="lineno">  182</span>&#160;                               <a class="code" href="structEmberTokTypeStackZllSecurity.htm">EmberTokTypeStackZllSecurity</a> *security);</div><div class="line"><a name="l00183"></a><span class="lineno">  183</span>&#160;</div><div class="line"><a name="l00187"></a><span class="lineno">  187</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga9c143f47489d72eb484391e64f23544b">emberZllSetTokenStackZllData</a>(<a class="code" href="structEmberTokTypeStackZllData.htm">EmberTokTypeStackZllData</a> *token);</div><div class="line"><a name="l00188"></a><span class="lineno">  188</span>&#160;</div><div class="line"><a name="l00192"></a><span class="lineno">  192</span>&#160;<span class="keywordtype">bool</span> <a class="code" href="group__zll.htm#gab6152f9d518c24b4fe31756a6487df7d">emberIsZllNetwork</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00193"></a><span class="lineno">  193</span>&#160;</div><div class="line"><a name="l00198"></a><span class="lineno">  198</span>&#160;<span class="keywordtype">void</span> <a class="code" href="group__zll.htm#ga44d4ce9a4219756aff3f1a19e9f03188">emberZllSetNonZllNetwork</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00199"></a><span class="lineno">  199</span>&#160;</div><div class="line"><a name="l00203"></a><span class="lineno">  203</span>&#160;<a class="code" href="group__zll__types.htm#ga9eb2c50e5fed86cfd75fd1718ec3b65b">EmberZllPolicy</a> <a class="code" href="group__zll.htm#gaab962d6563c26e41b8d42da073d14a1c">emberZllGetPolicy</a>(<span class="keywordtype">void</span>);</div><div class="line"><a name="l00204"></a><span class="lineno">  204</span>&#160;</div><div class="line"><a name="l00208"></a><span class="lineno">  208</span>&#160;<a class="code" href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a> <a class="code" href="group__zll.htm#ga84715425d60ee15fdc74b96fc3c730d8">emberZllSetPolicy</a>(<a class="code" href="group__zll__types.htm#ga9eb2c50e5fed86cfd75fd1718ec3b65b">EmberZllPolicy</a> policy);</div><div class="line"><a name="l00209"></a><span class="lineno">  209</span>&#160;</div><div class="ttc" id="group__zll_htm_ga9c143f47489d72eb484391e64f23544b"><div class="ttname"><a href="group__zll.htm#ga9c143f47489d72eb484391e64f23544b">emberZllSetTokenStackZllData</a></div><div class="ttdeci">void emberZllSetTokenStackZllData(EmberTokTypeStackZllData *token)</div><div class="ttdoc">This call sets the Zll Stack data token. </div></div>
<div class="ttc" id="group__zll_htm_ga485188c22ff8a4259ac70ca4b40ef31a"><div class="ttname"><a href="group__zll.htm#ga485188c22ff8a4259ac70ca4b40ef31a">emberZllGetTokenStackZllSecurity</a></div><div class="ttdeci">void emberZllGetTokenStackZllSecurity(EmberTokTypeStackZllSecurity *token)</div><div class="ttdoc">This call reads the Zll Stack security token. </div></div>
<div class="ttc" id="group__zll_htm_ga44d4ce9a4219756aff3f1a19e9f03188"><div class="ttname"><a href="group__zll.htm#ga44d4ce9a4219756aff3f1a19e9f03188">emberZllSetNonZllNetwork</a></div><div class="ttdeci">void emberZllSetNonZllNetwork(void)</div><div class="ttdoc">This call will alter the ZLL data token to reflect the fact that the network is non-ZLL. </div></div>
<div class="ttc" id="structEmberZllInitialSecurityState_htm"><div class="ttname"><a href="structEmberZllInitialSecurityState.htm">EmberZllInitialSecurityState</a></div><div class="ttdoc">This describes the Initial Security features and requirements that will be used when forming or joini...</div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00226">zll-types.h:226</a></div></div>
<div class="ttc" id="group__zll__types_htm_ga9eb2c50e5fed86cfd75fd1718ec3b65b"><div class="ttname"><a href="group__zll__types.htm#ga9eb2c50e5fed86cfd75fd1718ec3b65b">EmberZllPolicy</a></div><div class="ttdeci">EmberZllPolicy</div><div class="ttdoc">This enumeration indicates whether or not the stack processes ZLL messages. </div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00241">zll-types.h:241</a></div></div>
<div class="ttc" id="structEmberTokTypeStackZllData_htm"><div class="ttname"><a href="structEmberTokTypeStackZllData.htm">EmberTokTypeStackZllData</a></div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00257">zll-types.h:257</a></div></div>
<div class="ttc" id="group__zll_htm_ga08d23d25544dbad5ad4b285a1dd474e8"><div class="ttname"><a href="group__zll.htm#ga08d23d25544dbad5ad4b285a1dd474e8">emberZllSetInitialSecurityState</a></div><div class="ttdeci">EmberStatus emberZllSetInitialSecurityState(const EmberKeyData *networkKey, const EmberZllInitialSecurityState *securityState)</div><div class="ttdoc">This call will cause the device to setup the security information used in its network. It must be called prior to forming, starting, or joining a network. </div></div>
<div class="ttc" id="group__zll_htm_gabbbe392c97ff423bc211d4a018b8d7b5"><div class="ttname"><a href="group__zll.htm#gabbbe392c97ff423bc211d4a018b8d7b5">emberZllStartScan</a></div><div class="ttdeci">EmberStatus emberZllStartScan(uint32_t channelMask, int8_t radioPowerForScan, EmberNodeType nodeType)</div><div class="ttdoc">This call will initiate a ZLL network scan on all the specified channels. Results will be returned in...</div></div>
<div class="ttc" id="group__zll_htm_ga8e4d8b32dda6b8f896a69164f7e5f23f"><div class="ttname"><a href="group__zll.htm#ga8e4d8b32dda6b8f896a69164f7e5f23f">emberZllAddressAssignmentHandler</a></div><div class="ttdeci">void emberZllAddressAssignmentHandler(const EmberZllAddressAssignment *addressInfo)</div><div class="ttdoc">This call is fired when network and group addresses are assigned to a remote mode in a network start ...</div></div>
<div class="ttc" id="group__zll_htm_gaab962d6563c26e41b8d42da073d14a1c"><div class="ttname"><a href="group__zll.htm#gaab962d6563c26e41b8d42da073d14a1c">emberZllGetPolicy</a></div><div class="ttdeci">EmberZllPolicy emberZllGetPolicy(void)</div><div class="ttdoc">This call will get the policy that enables or disables ZLL processing. </div></div>
<div class="ttc" id="group__ember__types_htm_ga32518ff17fd5b898204c3e131077a1ac"><div class="ttname"><a href="group__ember__types.htm#ga32518ff17fd5b898204c3e131077a1ac">EmberNodeType</a></div><div class="ttdeci">EmberNodeType</div><div class="ttdoc">Defines the possible types of nodes and the roles that a node might play in a network. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l00464">ember-types.h:464</a></div></div>
<div class="ttc" id="structEmberTokTypeStackZllSecurity_htm"><div class="ttname"><a href="structEmberTokTypeStackZllSecurity.htm">EmberTokTypeStackZllSecurity</a></div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00267">zll-types.h:267</a></div></div>
<div class="ttc" id="group__zll_htm_ga4e0e0b77bf48e8f3c49e620433837def"><div class="ttname"><a href="group__zll.htm#ga4e0e0b77bf48e8f3c49e620433837def">emberZllSetRxOnWhenIdle</a></div><div class="ttdeci">EmberStatus emberZllSetRxOnWhenIdle(uint16_t durationMs)</div><div class="ttdoc">This call will change the mode of the radio so that the receiver is on when the device is idle...</div></div>
<div class="ttc" id="group__zll_htm_gae08595457d77d2050d35bfc8a8fdc56f"><div class="ttname"><a href="group__zll.htm#gae08595457d77d2050d35bfc8a8fdc56f">emberZllGetTokenStackZllData</a></div><div class="ttdeci">void emberZllGetTokenStackZllData(EmberTokTypeStackZllData *token)</div><div class="ttdoc">This call reads the Zll Stack data token. </div></div>
<div class="ttc" id="structEmberZllDeviceInfoRecord_htm"><div class="ttname"><a href="structEmberZllDeviceInfoRecord.htm">EmberZllDeviceInfoRecord</a></div><div class="ttdoc">Information discovered during a ZLL scan about the ZLL device&amp;#39;s endpoint information. </div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00138">zll-types.h:138</a></div></div>
<div class="ttc" id="structEmberKeyData_htm"><div class="ttname"><a href="structEmberKeyData.htm">EmberKeyData</a></div><div class="ttdoc">This data structure contains the key data that is passed into various other functions. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l01512">ember-types.h:1512</a></div></div>
<div class="ttc" id="group__zll_htm_gabf0e7be763d8771dd67097bfcabac057"><div class="ttname"><a href="group__zll.htm#gabf0e7be763d8771dd67097bfcabac057">emberZllGetTokensStackZll</a></div><div class="ttdeci">void emberZllGetTokensStackZll(EmberTokTypeStackZllData *data, EmberTokTypeStackZllSecurity *security)</div><div class="ttdoc">This call reads both the Zll Stack data and security tokens. </div></div>
<div class="ttc" id="group__zll_htm_ga0bc61b9d557dbdd31322eb02f87081dd"><div class="ttname"><a href="group__zll.htm#ga0bc61b9d557dbdd31322eb02f87081dd">emberZllJoinTarget</a></div><div class="ttdeci">EmberStatus emberZllJoinTarget(const EmberZllNetwork *targetNetworkInfo)</div><div class="ttdoc">This call will cause the device to send a NWK start or join to the target device and cause the remote...</div></div>
<div class="ttc" id="group__zll_htm_ga85757b4b307b7e2e9b220f067a8715a0"><div class="ttname"><a href="group__zll.htm#ga85757b4b307b7e2e9b220f067a8715a0">emberZllNetworkFoundHandler</a></div><div class="ttdeci">void emberZllNetworkFoundHandler(const EmberZllNetwork *networkInfo, const EmberZllDeviceInfoRecord *deviceInfo)</div><div class="ttdoc">This call is fired when a ZLL network scan finds a ZLL network. The network information will be retur...</div></div>
<div class="ttc" id="group__zll_htm_gab6152f9d518c24b4fe31756a6487df7d"><div class="ttname"><a href="group__zll.htm#gab6152f9d518c24b4fe31756a6487df7d">emberIsZllNetwork</a></div><div class="ttdeci">bool emberIsZllNetwork(void)</div><div class="ttdoc">This call returns whether or not the network is a ZLL network. </div></div>
<div class="ttc" id="group__zll_htm_gae890f5d8f0754425d0fd4f208e729eef"><div class="ttname"><a href="group__zll.htm#gae890f5d8f0754425d0fd4f208e729eef">emberZllFormNetwork</a></div><div class="ttdeci">EmberStatus emberZllFormNetwork(EmberZllNetwork *networkInfo, int8_t radioTxPower)</div><div class="ttdoc">This will set the device type as a router or end device (depending on the passed nodeType) and setup ...</div></div>
<div class="ttc" id="group__zll_htm_gac613798e523313428c05fa764b0815a1"><div class="ttname"><a href="group__zll.htm#gac613798e523313428c05fa764b0815a1">emberZllSendNetworkResponseTestHandler</a></div><div class="ttdeci">boolean emberZllSendNetworkResponseTestHandler(uint8_t *cmdId, uint32_t *transactionId, EmberStatus *responseStatus)</div><div class="ttdoc">This call is fired when a target device is preparing a response to a network start or network join ro...</div></div>
<div class="ttc" id="structEmberZllNetwork_htm"><div class="ttname"><a href="structEmberZllNetwork.htm">EmberZllNetwork</a></div><div class="ttdoc">Information about the ZLL network and specific device that responded to a ZLL scan request...</div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00122">zll-types.h:122</a></div></div>
<div class="ttc" id="group__ember__types_htm_gacff561a945530f3039d6715958418ab8"><div class="ttname"><a href="group__ember__types.htm#gacff561a945530f3039d6715958418ab8">EmberStatus</a></div><div class="ttdeci">uint8_t EmberStatus</div><div class="ttdoc">EmberReleaseTypeStruct Data that relates release type to the correct string. </div><div class="ttdef"><b>Definition:</b> <a href="ember-types_8h_source.htm#l00175">ember-types.h:175</a></div></div>
<div class="ttc" id="structEmberZllAddressAssignment_htm"><div class="ttname"><a href="structEmberZllAddressAssignment.htm">EmberZllAddressAssignment</a></div><div class="ttdoc">Network and group address assignment information. </div><div class="ttdef"><b>Definition:</b> <a href="zll-types_8h_source.htm#l00150">zll-types.h:150</a></div></div>
<div class="ttc" id="group__zll_htm_ga3cbd754adb810d2e6d60adb121fa342b"><div class="ttname"><a href="group__zll.htm#ga3cbd754adb810d2e6d60adb121fa342b">emberZllTouchLinkTargetHandler</a></div><div class="ttdeci">void emberZllTouchLinkTargetHandler(const EmberZllNetwork *networkInfo)</div><div class="ttdoc">This call is fired when the device is a target of a touch link. </div></div>
<div class="ttc" id="group__zll_htm_ga8a32a0408b13c5e7e058dd9e9d63b712"><div class="ttname"><a href="group__zll.htm#ga8a32a0408b13c5e7e058dd9e9d63b712">emberZllScanCompleteHandler</a></div><div class="ttdeci">void emberZllScanCompleteHandler(EmberStatus status)</div><div class="ttdoc">This call is fired when a ZLL network scan is complete. </div></div>
<div class="ttc" id="group__zll_htm_ga508e465141bba39737df039f9a15bd02"><div class="ttname"><a href="group__zll.htm#ga508e465141bba39737df039f9a15bd02">emberZllSendUnicastTestHandler</a></div><div class="ttdeci">boolean emberZllSendUnicastTestHandler(uint8_t *targetEui64, uint8_t *buffer, uint8_t length)</div><div class="ttdoc">This call is fired when a target device is about to send a unicast response to a network start or net...</div></div>
<div class="ttc" id="group__zll_htm_ga84715425d60ee15fdc74b96fc3c730d8"><div class="ttname"><a href="group__zll.htm#ga84715425d60ee15fdc74b96fc3c730d8">emberZllSetPolicy</a></div><div class="ttdeci">EmberStatus emberZllSetPolicy(EmberZllPolicy policy)</div><div class="ttdoc">This call will set the policy to enable or disable ZLL processing. </div></div>
</div><!-- fragment --></div><!-- contents -->
</div><!-- doc-content -->
<hr size="1">
<table border="0" cellspacing="0" cellpadding="0" width=100%>
<tr>
<td><address><small>
EmberZNet API Reference: For the EM35x SoC Platform. EmberZNet 6.0.0.0.
</small></address>
</td>
<td align="right">
<address><small>
</small></address>
</td>
</tr>
</table>
</body>
</html>
